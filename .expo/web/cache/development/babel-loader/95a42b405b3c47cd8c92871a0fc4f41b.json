{"ast":null,"code":"var contains = function contains(query, item) {\n  if (item && typeof item != 'object') {\n    var str = item.toString().toLowerCase();\n\n    if (str.includes(query.toString())) {\n      return true;\n    }\n  } else {\n    for (var key in item) {\n      if (item[key] && typeof item[key] == 'object') {\n        return contains(query, item[key]);\n      } else {\n        var _str = item[key].toString().toLowerCase();\n\n        if (_str.includes(query.toString())) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nexport var deepSearchInArr = function deepSearchInArr(query, arr) {\n  var array = [];\n\n  for (var i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/node_modules/react-native-select-dropdown/src/helpers/deepSearchInArr.js"],"names":["contains","query","item","str","toString","toLowerCase","includes","key","deepSearchInArr","arr","array","i","length","push"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAEhC,MAAIA,IAAI,IAAI,OAAOA,IAAP,IAAe,QAA3B,EAAqC;AACnC,QAAMC,GAAG,GAAGD,IAAI,CAACE,QAAL,GAAgBC,WAAhB,EAAZ;;AACA,QAAIF,GAAG,CAACG,QAAJ,CAAaL,KAAK,CAACG,QAAN,EAAb,CAAJ,EAAoC;AAClC,aAAO,IAAP;AACD;AACF,GALD,MAKO;AAEL,SAAK,IAAIG,GAAT,IAAgBL,IAAhB,EAAsB;AACpB,UAAIA,IAAI,CAACK,GAAD,CAAJ,IAAa,OAAOL,IAAI,CAACK,GAAD,CAAX,IAAoB,QAArC,EAA+C;AAC7C,eAAOP,QAAQ,CAACC,KAAD,EAAQC,IAAI,CAACK,GAAD,CAAZ,CAAf;AACD,OAFD,MAEO;AACL,YAAMJ,IAAG,GAAGD,IAAI,CAACK,GAAD,CAAJ,CAAUH,QAAV,GAAqBC,WAArB,EAAZ;;AACA,YAAIF,IAAG,CAACG,QAAJ,CAAaL,KAAK,CAACG,QAAN,EAAb,CAAJ,EAAoC;AAClC,iBAAO,IAAP;AACD;AACF;AACF;AACF;;AACD,SAAO,KAAP;AACD,CArBD;;AAuBA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAQQ,GAAR,EAAgB;AAC7C,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,CAACG,MAAJ,GAAa,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIX,QAAQ,CAACC,KAAD,EAAQQ,GAAG,CAACE,CAAD,CAAX,CAAZ,EAA6B;AAC3BD,MAAAA,KAAK,CAACG,IAAN,CAAWJ,GAAG,CAACE,CAAD,CAAd;AACD,KAFD,MAEO;AACLD,MAAAA,KAAK,CAACG,IAAN,CAAW,IAAX;AACD;;AACD,QAAIF,CAAC,IAAIF,GAAG,CAACG,MAAJ,GAAa,CAAtB,EAAyB;AACvB,aAAOF,KAAP;AACD;AACF;AACF,CAZM","sourcesContent":["const contains = (query, item) => {\n  // string, number or boolean\n  if (item && typeof item != 'object') {\n    const str = item.toString().toLowerCase();\n    if (str.includes(query.toString())) {\n      return true;\n    }\n  } else {\n    // item is an object\n    for (let key in item) {\n      if (item[key] && typeof item[key] == 'object') {\n        return contains(query, item[key]);\n      } else {\n        const str = item[key].toString().toLowerCase();\n        if (str.includes(query.toString())) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const deepSearchInArr = (query, arr) => {\n  let array = [];\n  for (let i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}