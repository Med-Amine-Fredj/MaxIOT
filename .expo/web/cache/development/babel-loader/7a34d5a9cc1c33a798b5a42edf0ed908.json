{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport colors from \"../../config/colors\";\nimport Icon from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar w = Dimensions.get('window').width;\nvar h = Dimensions.get('window').height;\n\nfunction IconsCard(_ref) {\n  var _iconData$meta, _iconData$meta2, _iconData$meta3;\n\n  var iconData = _ref.iconData,\n      onPress = _ref.onPress,\n      values = _ref.values;\n  return (iconData == null ? void 0 : iconData.chartType) === 'Icons' && _jsx(TouchableWithoutFeedback, {\n    onPress: onPress,\n    children: _jsx(View, {\n      style: styles.card,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Icon, {\n          iconName: iconData == null ? void 0 : (_iconData$meta = iconData.meta) == null ? void 0 : _iconData$meta.iconName,\n          iconColor: iconData == null ? void 0 : (_iconData$meta2 = iconData.meta) == null ? void 0 : _iconData$meta2.iconColor,\n          iconBackgroundColor: iconData == null ? void 0 : (_iconData$meta3 = iconData.meta) == null ? void 0 : _iconData$meta3.iconBackgroundColor\n        }), _jsxs(View, {\n          style: styles.textContainer,\n          children: [_jsx(Text, {\n            style: styles.v,\n            numberOfLines: 1,\n            children: values[(values == null ? void 0 : values.length) - 1]\n          }), _jsx(Text, {\n            style: styles.title,\n            numberOfLines: 1,\n            children: iconData == null ? void 0 : iconData.name\n          })]\n        })]\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    borderRadius: 10,\n    backgroundColor: colors.white,\n    marginTop: h * 0.015,\n    overflow: 'hidden',\n    height: h * 0.17,\n    width: w / 2 * 0.58,\n    marginHorizontal: 3,\n    maxWidth: w / 2 * 0.58\n  },\n  container: {\n    marginTop: '10%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '90%'\n  },\n  textContainer: {\n    marginTop: '5%'\n  },\n  v: {\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 10,\n    fontWeight: '100'\n  }\n});\nexport default IconsCard;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/cards/IconsCard.js"],"names":["React","colors","Icon","w","Dimensions","get","width","h","height","IconsCard","iconData","onPress","values","chartType","styles","card","container","meta","iconName","iconColor","iconBackgroundColor","textContainer","v","length","title","name","StyleSheet","create","flex","borderRadius","backgroundColor","white","marginTop","overflow","marginHorizontal","maxWidth","alignSelf","alignItems","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Text,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport colors from '../../config/colors';\r\nimport Icon from '../Icon';\r\n\r\nlet w = Dimensions.get('window').width;\r\nlet h = Dimensions.get('window').height;\r\n\r\nfunction IconsCard({ iconData, onPress, values }) {\r\n  return (\r\n    iconData?.chartType === 'Icons' && (\r\n      <TouchableWithoutFeedback onPress={onPress}>\r\n        <View style={styles.card}>\r\n          <View style={styles.container}>\r\n            <Icon\r\n              iconName={iconData?.meta?.iconName}\r\n              iconColor={iconData?.meta?.iconColor}\r\n              iconBackgroundColor={iconData?.meta?.iconBackgroundColor}\r\n            />\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.v} numberOfLines={1}>\r\n                {values[values?.length - 1]}\r\n              </Text>\r\n              <Text style={styles.title} numberOfLines={1}>\r\n                {iconData?.name}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    )\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    flex: 1,\r\n    borderRadius: 10,\r\n    backgroundColor: colors.white,\r\n    marginTop: h * 0.015,\r\n    overflow: 'hidden',\r\n    height: h * 0.17,\r\n    width: (w / 2) * 0.58,\r\n    marginHorizontal: 3,\r\n    maxWidth: (w / 2) * 0.58,\r\n  },\r\n  container: {\r\n    marginTop: '10%',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    height: '90%',\r\n  },\r\n  textContainer: {\r\n    marginTop: '5%',\r\n  },\r\n  v: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 10,\r\n    fontWeight: '100',\r\n  },\r\n});\r\n\r\nexport default IconsCard;\r\n"]},"metadata":{},"sourceType":"module"}