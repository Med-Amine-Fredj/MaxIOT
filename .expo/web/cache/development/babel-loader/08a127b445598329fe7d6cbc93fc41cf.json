{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { GET_DEVICES_REQUEST, GET_DEVICES_SUCCESS, GET_DEVICES_FAIL, UPDATE_DEVICES_REQUEST, UPDATE_DEVICES_SUCCESS, UPDATE_DEVICES_FAIL, REMOVE_DEVICES_REQUEST, REMOVE_DEVICES_SUCCESS, REMOVE_DEVICES_FAIL, INSERT_DEVICES_REQUEST, INSERT_DEVICES_SUCCESS, INSERT_DEVICES_FAIL } from \"../slices/reducers/devices\";\nimport axios from 'axios';\nimport { API_URL } from \"../../config/dotEnvFile\";\nexport var getDevices = function getDevices(store) {\n  return _regeneratorRuntime.async(function getDevices$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            store.dispatch({\n              type: GET_DEVICES_REQUEST\n            });\n            axios.get(API_URL + \"/devices\").then(function (response) {\n              store.dispatch({\n                type: GET_DEVICES_SUCCESS,\n                payload: {\n                  data: response.data\n                }\n              });\n            });\n          } catch (error) {\n            store.dispatch({\n              type: GET_DEVICES_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            });\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var updateDevices = function updateDevices(store, id, meta) {\n  try {\n    var _store$getState$entit, _store$getState$entit2;\n\n    store.dispatch({\n      type: UPDATE_DEVICES_REQUEST\n    });\n    var deviceData = (_store$getState$entit = store.getState().entities) == null ? void 0 : (_store$getState$entit2 = _store$getState$entit.devices) == null ? void 0 : _store$getState$entit2.devicesStyle;\n    var newArr = deviceData.map(function (obj) {\n      if (obj._id === id) {\n        return _objectSpread(_objectSpread({}, obj), {}, {\n          meta: meta\n        });\n      }\n\n      return obj;\n    });\n    store.dispatch({\n      type: UPDATE_DEVICES_SUCCESS,\n      payload: {\n        data: newArr\n      }\n    });\n  } catch (error) {\n    store.dispatch({\n      type: UPDATE_DEVICES_FAIL,\n      payload: error\n    });\n  }\n};\nexport var removeDevice = function removeDevice(store, data) {\n  try {\n    var _store$getState$entit3, _store$getState$entit4;\n\n    store.dispatch({\n      type: REMOVE_DEVICES_REQUEST\n    });\n    var devicesStyle = (_store$getState$entit3 = store.getState().entities) == null ? void 0 : (_store$getState$entit4 = _store$getState$entit3.devices) == null ? void 0 : _store$getState$entit4.devicesStyle;\n    var result = devicesStyle.filter(function (item) {\n      return item._id !== data;\n    });\n    store.dispatch({\n      type: REMOVE_DEVICES_SUCCESS,\n      payload: {\n        data: result\n      }\n    });\n  } catch (error) {\n    store.dispatch({\n      type: REMOVE_DEVICES_FAIL,\n      payload: error\n    });\n  }\n};\nexport var insertDevice = function insertDevice(store, data) {\n  try {\n    store.dispatch({\n      type: INSERT_DEVICES_REQUEST\n    });\n    store.dispatch({\n      type: INSERT_DEVICES_SUCCESS,\n      payload: {\n        data: data\n      }\n    });\n  } catch (error) {\n    store.dispatch({\n      type: INSERT_DEVICES_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/store/actions/devicesActions.js"],"names":["GET_DEVICES_REQUEST","GET_DEVICES_SUCCESS","GET_DEVICES_FAIL","UPDATE_DEVICES_REQUEST","UPDATE_DEVICES_SUCCESS","UPDATE_DEVICES_FAIL","REMOVE_DEVICES_REQUEST","REMOVE_DEVICES_SUCCESS","REMOVE_DEVICES_FAIL","INSERT_DEVICES_REQUEST","INSERT_DEVICES_SUCCESS","INSERT_DEVICES_FAIL","axios","API_URL","getDevices","store","dispatch","type","get","then","response","payload","data","error","message","updateDevices","id","meta","deviceData","getState","entities","devices","devicesStyle","newArr","map","obj","_id","removeDevice","result","filter","item","insertDevice"],"mappings":";;;;;;;AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,sBAJF,EAKEC,sBALF,EAMEC,mBANF,EAOEC,sBAPF,EAQEC,sBARF,EASEC,mBATF,EAUEC,sBAVF,EAWEC,sBAXF,EAYEC,mBAZF;AAeA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACxB,cAAI;AACFA,YAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAEjB;AADO,aAAf;AAIAY,YAAAA,KAAK,CAACM,GAAN,CAAaL,OAAb,eAAgCM,IAAhC,CAAqC,UAACC,QAAD,EAAc;AACjDL,cAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,gBAAAA,IAAI,EAAEhB,mBADO;AAEboB,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAjB;AAFI,eAAf;AAID,aALD;AAMD,WAXD,CAWE,OAAOC,KAAP,EAAc;AACdR,YAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAEf,gBADO;AAEbmB,cAAAA,OAAO,EACLE,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBE,OAAtC,GACID,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBE,OADxB,GAEID,KAAK,CAACC;AALC,aAAf;AAOD;;AApBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAuBP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACV,KAAD,EAAQW,EAAR,EAAYC,IAAZ,EAAqB;AAChD,MAAI;AAAA;;AACFZ,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEd;AADO,KAAf;AAGA,QAAMyB,UAAU,4BAAGb,KAAK,CAACc,QAAN,GAAiBC,QAApB,+CAAG,sBAA2BC,OAA9B,qBAAG,uBAAoCC,YAAvD;AACA,QAAMC,MAAM,GAAGL,UAAU,CAACM,GAAX,CAAe,UAACC,GAAD,EAAS;AACrC,UAAIA,GAAG,CAACC,GAAJ,KAAYV,EAAhB,EAAoB;AAClB,+CAAYS,GAAZ;AAAiBR,UAAAA,IAAI,EAAEA;AAAvB;AACD;;AACD,aAAOQ,GAAP;AACD,KALc,CAAf;AAOApB,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEb,sBADO;AAEbiB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEW;AAAR;AAFI,KAAf;AAID,GAhBD,CAgBE,OAAOV,KAAP,EAAc;AACdR,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEZ,mBADO;AAEbgB,MAAAA,OAAO,EAAEE;AAFI,KAAf;AAID;AACF,CAvBM;AAyBP,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAACtB,KAAD,EAAQO,IAAR,EAAiB;AAC3C,MAAI;AAAA;;AACFP,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEX;AADO,KAAf;AAIA,QAAM0B,YAAY,6BAAGjB,KAAK,CAACc,QAAN,GAAiBC,QAApB,+CAAG,uBAA2BC,OAA9B,qBAAG,uBAAoCC,YAAzD;AACA,QAAMM,MAAM,GAAGN,YAAY,CAACO,MAAb,CAAoB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACJ,GAAL,KAAad,IAAvB;AAAA,KAApB,CAAf;AACAP,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEV,sBADO;AAEbc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEgB;AAAR;AAFI,KAAf;AAID,GAXD,CAWE,OAAOf,KAAP,EAAc;AACdR,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAET,mBADO;AAEba,MAAAA,OAAO,EAAEE;AAFI,KAAf;AAID;AACF,CAlBM;AAoBP,OAAO,IAAMkB,YAAY,GAAG,SAAfA,YAAe,CAAC1B,KAAD,EAAQO,IAAR,EAAiB;AAC3C,MAAI;AACFP,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAER;AADO,KAAf;AAGAM,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEP,sBADO;AAEbW,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAJA;AAAF;AAFI,KAAf;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AACdR,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEN,mBADO;AAEbU,MAAAA,OAAO,EAAEE;AAFI,KAAf;AAID;AACF,CAfM","sourcesContent":["import {\r\n  GET_DEVICES_REQUEST,\r\n  GET_DEVICES_SUCCESS,\r\n  GET_DEVICES_FAIL,\r\n  UPDATE_DEVICES_REQUEST,\r\n  UPDATE_DEVICES_SUCCESS,\r\n  UPDATE_DEVICES_FAIL,\r\n  REMOVE_DEVICES_REQUEST,\r\n  REMOVE_DEVICES_SUCCESS,\r\n  REMOVE_DEVICES_FAIL,\r\n  INSERT_DEVICES_REQUEST,\r\n  INSERT_DEVICES_SUCCESS,\r\n  INSERT_DEVICES_FAIL,\r\n} from '../slices/reducers/devices';\r\n\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../config/dotEnvFile';\r\n\r\nexport const getDevices = async (store) => {\r\n  try {\r\n    store.dispatch({\r\n      type: GET_DEVICES_REQUEST,\r\n    });\r\n\r\n    axios.get(`${API_URL}/devices`).then((response) => {\r\n      store.dispatch({\r\n        type: GET_DEVICES_SUCCESS,\r\n        payload: { data: response.data },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    store.dispatch({\r\n      type: GET_DEVICES_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateDevices = (store, id, meta) => {\r\n  try {\r\n    store.dispatch({\r\n      type: UPDATE_DEVICES_REQUEST,\r\n    });\r\n    const deviceData = store.getState().entities?.devices?.devicesStyle;\r\n    const newArr = deviceData.map((obj) => {\r\n      if (obj._id === id) {\r\n        return { ...obj, meta: meta };\r\n      }\r\n      return obj;\r\n    });\r\n\r\n    store.dispatch({\r\n      type: UPDATE_DEVICES_SUCCESS,\r\n      payload: { data: newArr },\r\n    });\r\n  } catch (error) {\r\n    store.dispatch({\r\n      type: UPDATE_DEVICES_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeDevice = (store, data) => {\r\n  try {\r\n    store.dispatch({\r\n      type: REMOVE_DEVICES_REQUEST,\r\n    });\r\n\r\n    const devicesStyle = store.getState().entities?.devices?.devicesStyle;\r\n    const result = devicesStyle.filter((item) => item._id !== data);\r\n    store.dispatch({\r\n      type: REMOVE_DEVICES_SUCCESS,\r\n      payload: { data: result },\r\n    });\r\n  } catch (error) {\r\n    store.dispatch({\r\n      type: REMOVE_DEVICES_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const insertDevice = (store, data) => {\r\n  try {\r\n    store.dispatch({\r\n      type: INSERT_DEVICES_REQUEST,\r\n    });\r\n    store.dispatch({\r\n      type: INSERT_DEVICES_SUCCESS,\r\n      payload: { data },\r\n    });\r\n  } catch (error) {\r\n    store.dispatch({\r\n      type: INSERT_DEVICES_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}