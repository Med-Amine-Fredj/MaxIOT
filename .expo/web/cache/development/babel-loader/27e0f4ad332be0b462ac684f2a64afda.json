{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Header from \"../components/Header\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ChartDetailsCard from \"../components/cards/ChartDetailsCard\";\nimport colors from \"../config/colors\";\nimport IncompletedGauge from \"../components/charts/IncompletedGauge\";\nimport BezierLineChart from \"../components/charts/BezierLineChart\";\nimport CircleGauge from \"../components/charts/CircleGauge\";\nimport SimpleLineChart from \"../components/charts/SimpleLineChart\";\nimport ProgressRing from \"../components/charts/ProgressRing\";\nimport StackedBarsChart from \"../components/charts/StackedBarsChart\";\nimport SimplePieCharts from \"../components/charts/SimplePieCharts\";\nimport MultiBarChart from \"../components/charts/MultiBarChart\";\nimport dataDetails from \"../mockData/dataDetails\";\nimport { BEZIER_LINE, COMPLETED_GAUGE, INCOMPLETED_GAUGE, PIE, PROGRESS_RING, SIMPLE_BAR, SIMPLE_LINE, STACKED_BARS } from \"../components/charts/AllChartsTypesConstants\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport { useSelector, useStore } from 'react-redux';\nimport { stackedNumberCalculator } from \"../../Helpers/Functions/StackedNumberForStackedBarChart\";\nimport { chartValuesCalculator } from \"../../Helpers/Functions/chartsDataCalculator\";\nimport SelectedDropdown from \"../components/SelectedDropdown\";\nimport { lastValueDate } from \"../../Helpers/Functions/lastValueDate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ChartsDetailsScreen(_ref) {\n  var _deviceStyle$filter$, _chartValuesCalculato, _chartValuesCalculato2, _chartValuesCalculato3, _item$meta, _item$meta2, _item$meta2$min, _item$meta3, _item$meta4, _item$meta4$max, _item$meta5, _item$meta6, _item$meta6$warning, _item$meta7, _item$meta8, _item$meta8$min, _item$meta9, _item$meta10, _item$meta10$warning, _item$meta11, _item$meta12, _item$meta12$max, _chartValuesCalculato4, _item$meta13, _item$meta14, _item$meta14$min, _item$meta15, _item$meta16, _item$meta16$max, _item$meta17, _item$meta18, _item$meta18$warning, _item$meta19, _item$meta20, _item$meta20$min, _item$meta21, _item$meta22, _item$meta22$warning, _item$meta23, _item$meta24, _item$meta24$max, _item$meta25, _item$meta26, _item$meta26$colors, _item$meta27, _item$meta28, _item$meta29, _item$meta30, _item$meta31, _item$meta32;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var store = useStore();\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    setTimeout(function () {\n      return setRefreshing(false);\n    }, 3000);\n  };\n\n  var id = route.params.id;\n  var realTime = route.params.realTime;\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      item = _useState4[0],\n      setItem = _useState4[1];\n\n  var _useState5 = useState(realTime),\n      _useState6 = _slicedToArray(_useState5, 2),\n      realTim = _useState6[0],\n      setReal = _useState6[1];\n\n  var deviceStyle = useSelector(function (state) {\n    var _state$entities, _state$entities$devic;\n\n    return state == null ? void 0 : (_state$entities = state.entities) == null ? void 0 : (_state$entities$devic = _state$entities.devices) == null ? void 0 : _state$entities$devic.devicesStyle;\n  });\n  var deviceData = useSelector(function (state) {\n    var _state$entities2, _state$entities2$devi;\n\n    return realTim && (state == null ? void 0 : (_state$entities2 = state.entities) == null ? void 0 : (_state$entities2$devi = _state$entities2.devicesData) == null ? void 0 : _state$entities2$devi.devicesData);\n  });\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedFilter = _useState8[0],\n      setSelectedFilter = _useState8[1];\n\n  useEffect(function () {\n    setItem(deviceStyle == null ? void 0 : deviceStyle.filter(function (n) {\n      return (n == null ? void 0 : n._id) === id;\n    })[0]);\n    console.log('Selected Filter =========', selectedFilter);\n  }, [selectedFilter]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(ActivityIndicator, {\n      visible: !id\n    }), _jsx(Header, {\n      realTime: realTim,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      onRealTimePress: function onRealTimePress() {\n        return setReal(!realTim);\n      },\n      title: item == null ? void 0 : item.name\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          alignItems: 'flex-end',\n          marginTop: 3,\n          marginRight: '2%'\n        },\n        children: _jsx(SelectedDropdown, {\n          data: deviceStyle == null ? void 0 : (_deviceStyle$filter$ = deviceStyle.filter(function (n) {\n            return (n == null ? void 0 : n._id) === id;\n          })[0]) == null ? void 0 : _deviceStyle$filter$.chartType,\n          realTime: realTim,\n          onSelect: function onSelect(selectedItem) {\n            setSelectedFilter(selectedItem);\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.chartContainer,\n        children: [(item == null ? void 0 : item.chartType) === SIMPLE_LINE && _jsxs(_Fragment, {\n          children: [_jsx(SimpleLineChart, {\n            dataArray: chartValuesCalculator(store, item._id) || [0],\n            size: \"large\"\n          }), _jsxs(View, {\n            style: styles.lineChartTextContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value : \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: chartValuesCalculator(store, item._id)[((_chartValuesCalculato = chartValuesCalculator(store, item._id)) == null ? void 0 : _chartValuesCalculato.length) - 1]\n            })]\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === BEZIER_LINE && _jsxs(_Fragment, {\n          children: [_jsx(BezierLineChart, {\n            dataArray: chartValuesCalculator(store, item._id),\n            size: \"large\"\n          }), _jsxs(View, {\n            style: styles.lineChartTextContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value : \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: chartValuesCalculator(store, item._id)[((_chartValuesCalculato2 = chartValuesCalculator(store, item._id)) == null ? void 0 : _chartValuesCalculato2.length) - 1]\n            })]\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === INCOMPLETED_GAUGE && _jsxs(_Fragment, {\n          children: [_jsx(IncompletedGauge, {\n            value: chartValuesCalculator(store, item._id)[((_chartValuesCalculato3 = chartValuesCalculator(store, item._id)) == null ? void 0 : _chartValuesCalculato3.length) - 1],\n            min: item == null ? void 0 : (_item$meta = item.meta) == null ? void 0 : _item$meta.min[(item == null ? void 0 : (_item$meta2 = item.meta) == null ? void 0 : (_item$meta2$min = _item$meta2.min) == null ? void 0 : _item$meta2$min.length) - 1],\n            max: item == null ? void 0 : (_item$meta3 = item.meta) == null ? void 0 : _item$meta3.max[(item == null ? void 0 : (_item$meta4 = item.meta) == null ? void 0 : (_item$meta4$max = _item$meta4.max) == null ? void 0 : _item$meta4$max.length) - 1],\n            warning: item == null ? void 0 : (_item$meta5 = item.meta) == null ? void 0 : _item$meta5.warning[(item == null ? void 0 : (_item$meta6 = item.meta) == null ? void 0 : (_item$meta6$warning = _item$meta6.warning) == null ? void 0 : _item$meta6$warning.length) - 1],\n            size: \"large\"\n          }), _jsxs(View, {\n            style: styles.lineChartTextContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Min : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta7 = item.meta) == null ? void 0 : _item$meta7.min[(item == null ? void 0 : (_item$meta8 = item.meta) == null ? void 0 : (_item$meta8$min = _item$meta8.min) == null ? void 0 : _item$meta8$min.length) - 1], \"%\"]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Warning : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta9 = item.meta) == null ? void 0 : _item$meta9.warning[(item == null ? void 0 : (_item$meta10 = item.meta) == null ? void 0 : (_item$meta10$warning = _item$meta10.warning) == null ? void 0 : _item$meta10$warning.length) - 1], \"%\"]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Max : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta11 = item.meta) == null ? void 0 : _item$meta11.max[(item == null ? void 0 : (_item$meta12 = item.meta) == null ? void 0 : (_item$meta12$max = _item$meta12.max) == null ? void 0 : _item$meta12$max.length) - 1], \"%\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) == COMPLETED_GAUGE && _jsxs(_Fragment, {\n          children: [_jsx(CircleGauge, {\n            value: chartValuesCalculator(store, item._id)[((_chartValuesCalculato4 = chartValuesCalculator(store, item._id)) == null ? void 0 : _chartValuesCalculato4.length) - 1],\n            min: item == null ? void 0 : (_item$meta13 = item.meta) == null ? void 0 : _item$meta13.min[(item == null ? void 0 : (_item$meta14 = item.meta) == null ? void 0 : (_item$meta14$min = _item$meta14.min) == null ? void 0 : _item$meta14$min.length) - 1],\n            max: item == null ? void 0 : (_item$meta15 = item.meta) == null ? void 0 : _item$meta15.max[(item == null ? void 0 : (_item$meta16 = item.meta) == null ? void 0 : (_item$meta16$max = _item$meta16.max) == null ? void 0 : _item$meta16$max.length) - 1],\n            warning: item == null ? void 0 : (_item$meta17 = item.meta) == null ? void 0 : _item$meta17.warning[(item == null ? void 0 : (_item$meta18 = item.meta) == null ? void 0 : (_item$meta18$warning = _item$meta18.warning) == null ? void 0 : _item$meta18$warning.length) - 1],\n            size: \"large\"\n          }), _jsxs(View, {\n            style: styles.lineChartTextContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Min : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta19 = item.meta) == null ? void 0 : _item$meta19.min[(item == null ? void 0 : (_item$meta20 = item.meta) == null ? void 0 : (_item$meta20$min = _item$meta20.min) == null ? void 0 : _item$meta20$min.length) - 1], \"%\"]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Warning : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta21 = item.meta) == null ? void 0 : _item$meta21.warning[(item == null ? void 0 : (_item$meta22 = item.meta) == null ? void 0 : (_item$meta22$warning = _item$meta22.warning) == null ? void 0 : _item$meta22$warning.length) - 1], \"%\"]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Max : \"\n            }), _jsxs(Text, {\n              style: styles.lineChartText,\n              children: [item == null ? void 0 : (_item$meta23 = item.meta) == null ? void 0 : _item$meta23.max[(item == null ? void 0 : (_item$meta24 = item.meta) == null ? void 0 : (_item$meta24$max = _item$meta24.max) == null ? void 0 : _item$meta24$max.length) - 1], \"%\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === SIMPLE_BAR && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: {\n              alignSelf: 'center'\n            },\n            children: _jsx(MultiBarChart, {\n              size: \"large\",\n              values: chartValuesCalculator(store, item._id),\n              color: item == null ? void 0 : (_item$meta25 = item.meta) == null ? void 0 : _item$meta25.colors[(item == null ? void 0 : (_item$meta26 = item.meta) == null ? void 0 : (_item$meta26$colors = _item$meta26.colors) == null ? void 0 : _item$meta26$colors.length) - 1]\n            })\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === STACKED_BARS && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: {\n              marginLeft: 50\n            },\n            children: _jsx(StackedBarsChart, {\n              size: \"large\",\n              dataArray: chartValuesCalculator(store, item._id) || 0,\n              stackedNumber: stackedNumberCalculator(store, item._id) || 0,\n              legendArray: item == null ? void 0 : (_item$meta27 = item.meta) == null ? void 0 : _item$meta27.legend,\n              colorsArray: item == null ? void 0 : (_item$meta28 = item.meta) == null ? void 0 : _item$meta28.colors\n            })\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === PIE && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: {\n              alignSelf: 'center',\n              marginBottom: '10%'\n            },\n            children: _jsx(SimplePieCharts, {\n              size: \"large\",\n              names: item == null ? void 0 : (_item$meta29 = item.meta) == null ? void 0 : _item$meta29.names,\n              values: chartValuesCalculator(store, item._id),\n              colors: item == null ? void 0 : (_item$meta30 = item.meta) == null ? void 0 : _item$meta30.colors\n            })\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        }), (item == null ? void 0 : item.chartType) === PROGRESS_RING && _jsxs(_Fragment, {\n          children: [_jsx(ProgressRing, {\n            size: \"large\",\n            dataArray: chartValuesCalculator(store, item._id),\n            dataColors: item == null ? void 0 : (_item$meta31 = item.meta) == null ? void 0 : _item$meta31.colors,\n            dataLegend: item == null ? void 0 : (_item$meta32 = item.meta) == null ? void 0 : _item$meta32.legend\n          }), _jsxs(View, {\n            style: styles.lineChartTextDateContainer,\n            children: [_jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Date: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[0]\n            }), _jsx(Text, {\n              style: styles.lineChartTextTitle,\n              children: \"Last Value Time: \"\n            }), _jsx(Text, {\n              style: styles.lineChartText,\n              children: lastValueDate(store, item._id).split('T')[1].split('.')[0]\n            })]\n          })]\n        })]\n      }), _jsx(SafeAreaView, {\n        children: _jsxs(View, {\n          style: {\n            marginTop: 5\n          },\n          children: [_jsx(ListItemSeparator, {}), _jsx(FlatList, {\n            showsVerticalScrollIndicator: false,\n            showsHorizontalScrollIndicator: false,\n            data: dataDetails,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            ItemSeparatorComponent: ListItemSeparator,\n            refreshing: refreshing,\n            onRefresh: onRefresh,\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item;\n              return _jsx(ChartDetailsCard, {\n                item: item\n              });\n            }\n          })]\n        })\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  chartContainer: {\n    maxHeight: '50%'\n  },\n  lineChartTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: '1%'\n  },\n  lineChartTextTitle: {\n    alignSelf: 'center',\n    color: 'black',\n    fontSize: 13,\n    margin: 2\n  },\n  lineChartText: {\n    alignSelf: 'center',\n    color: colors.primary,\n    fontSize: 13,\n    fontWeight: '600'\n  },\n  lineChartTextDateContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});\nexport default ChartsDetailsScreen;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/Screens/ChartsDetailsScreen.js"],"names":["React","useEffect","useState","Header","ListItemSeparator","ChartDetailsCard","colors","IncompletedGauge","BezierLineChart","CircleGauge","SimpleLineChart","ProgressRing","StackedBarsChart","SimplePieCharts","MultiBarChart","dataDetails","BEZIER_LINE","COMPLETED_GAUGE","INCOMPLETED_GAUGE","PIE","PROGRESS_RING","SIMPLE_BAR","SIMPLE_LINE","STACKED_BARS","ActivityIndicator","useSelector","useStore","stackedNumberCalculator","chartValuesCalculator","SelectedDropdown","lastValueDate","ChartsDetailsScreen","navigation","route","refreshing","setRefreshing","store","onRefresh","setTimeout","id","params","realTime","item","setItem","realTim","setReal","deviceStyle","state","entities","devices","devicesStyle","deviceData","devicesData","selectedFilter","setSelectedFilter","filter","n","_id","console","log","goBack","name","styles","container","alignItems","marginTop","marginRight","chartType","selectedItem","chartContainer","lineChartTextContainer","lineChartTextTitle","lineChartText","length","lineChartTextDateContainer","split","meta","min","max","warning","alignSelf","marginLeft","legend","marginBottom","names","index","toString","StyleSheet","create","flex","backgroundColor","maxHeight","flexDirection","justifyContent","padding","color","fontSize","margin","primary","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet, FlatList, Text, SafeAreaView } from 'react-native';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport ListItemSeparator from '../components/ListItemSeparator';\r\n\r\nimport ChartDetailsCard from '../components/cards/ChartDetailsCard';\r\n\r\nimport colors from '../config/colors';\r\n\r\nimport IncompletedGauge from '../components/charts/IncompletedGauge';\r\nimport BezierLineChart from '../components/charts/BezierLineChart';\r\nimport CircleGauge from '../components/charts/CircleGauge';\r\nimport SimpleLineChart from '../components/charts/SimpleLineChart';\r\nimport ProgressRing from '../components/charts/ProgressRing';\r\nimport StackedBarsChart from '../components/charts/StackedBarsChart';\r\nimport SimplePieCharts from '../components/charts/SimplePieCharts';\r\nimport MultiBarChart from '../components/charts/MultiBarChart';\r\n\r\nimport dataDetails from '../mockData/dataDetails';\r\n\r\nimport {\r\n  BEZIER_LINE,\r\n  COMPLETED_GAUGE,\r\n  INCOMPLETED_GAUGE,\r\n  PIE,\r\n  PROGRESS_RING,\r\n  SIMPLE_BAR,\r\n  SIMPLE_LINE,\r\n  STACKED_BARS,\r\n} from '../components/charts/AllChartsTypesConstants';\r\n\r\nimport ActivityIndicator from '../components/ActivityIndicator';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { stackedNumberCalculator } from '../../Helpers/Functions/StackedNumberForStackedBarChart';\r\nimport { chartValuesCalculator } from '../../Helpers/Functions/chartsDataCalculator';\r\nimport SelectedDropdown from '../components/SelectedDropdown';\r\nimport { lastValueDate } from '../../Helpers/Functions/lastValueDate';\r\n\r\nfunction ChartsDetailsScreen({ navigation, route }) {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const store = useStore();\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    setTimeout(() => setRefreshing(false), 3000);\r\n  };\r\n\r\n  const id = route.params.id;\r\n\r\n  const realTime = route.params.realTime;\r\n\r\n  const [item, setItem] = useState({});\r\n\r\n  const [realTim, setReal] = useState(realTime);\r\n\r\n  const deviceStyle = useSelector(\r\n    (state) => state?.entities?.devices?.devicesStyle\r\n  );\r\n\r\n  const deviceData = useSelector(\r\n    (state) => realTim && state?.entities?.devicesData?.devicesData\r\n  );\r\n  const [selectedFilter, setSelectedFilter] = useState();\r\n\r\n  useEffect(() => {\r\n    setItem(deviceStyle?.filter((n) => n?._id === id)[0]);\r\n    console.log('Selected Filter =========', selectedFilter);\r\n  }, [selectedFilter]);\r\n\r\n  return (\r\n    <>\r\n      <ActivityIndicator visible={!id} />\r\n      <Header\r\n        realTime={realTim}\r\n        onPress={() => navigation.goBack()}\r\n        onRealTimePress={() => setReal(!realTim)}\r\n        title={item?.name}\r\n      />\r\n\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{ alignItems: 'flex-end', marginTop: 3, marginRight: '2%' }}\r\n        >\r\n          <SelectedDropdown\r\n            data={deviceStyle?.filter((n) => n?._id === id)[0]?.chartType}\r\n            realTime={realTim}\r\n            onSelect={(selectedItem) => {\r\n              setSelectedFilter(selectedItem);\r\n            }}\r\n          />\r\n        </View>\r\n        <View style={styles.chartContainer}>\r\n          {item?.chartType === SIMPLE_LINE && (\r\n            <>\r\n              <SimpleLineChart\r\n                dataArray={chartValuesCalculator(store, item._id) || [0]}\r\n                size=\"large\"\r\n              />\r\n              <View style={styles.lineChartTextContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {\r\n                    chartValuesCalculator(store, item._id)[\r\n                      chartValuesCalculator(store, item._id)?.length - 1\r\n                    ]\r\n                  }\r\n                </Text>\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n\r\n          {item?.chartType === BEZIER_LINE && (\r\n            <>\r\n              <BezierLineChart\r\n                dataArray={chartValuesCalculator(store, item._id)}\r\n                size=\"large\"\r\n              />\r\n              <View style={styles.lineChartTextContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {\r\n                    chartValuesCalculator(store, item._id)[\r\n                      chartValuesCalculator(store, item._id)?.length - 1\r\n                    ]\r\n                  }\r\n                </Text>\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType === INCOMPLETED_GAUGE && (\r\n            <>\r\n              <IncompletedGauge\r\n                value={\r\n                  chartValuesCalculator(store, item._id)[\r\n                    chartValuesCalculator(store, item._id)?.length - 1\r\n                  ]\r\n                }\r\n                min={item?.meta?.min[item?.meta?.min?.length - 1]}\r\n                max={item?.meta?.max[item?.meta?.max?.length - 1]}\r\n                warning={item?.meta?.warning[item?.meta?.warning?.length - 1]}\r\n                size=\"large\"\r\n              />\r\n              <View style={styles.lineChartTextContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Min : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.min[item?.meta?.min?.length - 1]}%\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Warning : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.warning[item?.meta?.warning?.length - 1]}%\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Max : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.max[item?.meta?.max?.length - 1]}%\r\n                </Text>\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType == COMPLETED_GAUGE && (\r\n            <>\r\n              <CircleGauge\r\n                value={\r\n                  chartValuesCalculator(store, item._id)[\r\n                    chartValuesCalculator(store, item._id)?.length - 1\r\n                  ]\r\n                }\r\n                min={item?.meta?.min[item?.meta?.min?.length - 1]}\r\n                max={item?.meta?.max[item?.meta?.max?.length - 1]}\r\n                warning={item?.meta?.warning[item?.meta?.warning?.length - 1]}\r\n                size=\"large\"\r\n              />\r\n              <View style={styles.lineChartTextContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Min : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.min[item?.meta?.min?.length - 1]}%\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Warning : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.warning[item?.meta?.warning?.length - 1]}%\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Max : </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {item?.meta?.max[item?.meta?.max?.length - 1]}%\r\n                </Text>\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType === SIMPLE_BAR && (\r\n            <>\r\n              <View\r\n                style={{\r\n                  alignSelf: 'center',\r\n                }}\r\n              >\r\n                <MultiBarChart\r\n                  size=\"large\"\r\n                  values={chartValuesCalculator(store, item._id)}\r\n                  color={item?.meta?.colors[item?.meta?.colors?.length - 1]}\r\n                />\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType === STACKED_BARS && (\r\n            <>\r\n              <View style={{ marginLeft: 50 }}>\r\n                <StackedBarsChart\r\n                  size=\"large\"\r\n                  dataArray={chartValuesCalculator(store, item._id) || 0}\r\n                  stackedNumber={stackedNumberCalculator(store, item._id) || 0}\r\n                  legendArray={item?.meta?.legend}\r\n                  colorsArray={item?.meta?.colors}\r\n                />\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType === PIE && (\r\n            <>\r\n              <View style={{ alignSelf: 'center', marginBottom: '10%' }}>\r\n                <SimplePieCharts\r\n                  size=\"large\"\r\n                  names={item?.meta?.names}\r\n                  values={chartValuesCalculator(store, item._id)}\r\n                  colors={item?.meta?.colors}\r\n                />\r\n              </View>\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n          {item?.chartType === PROGRESS_RING && (\r\n            <>\r\n              <ProgressRing\r\n                size=\"large\"\r\n                dataArray={chartValuesCalculator(store, item._id)}\r\n                dataColors={item?.meta?.colors}\r\n                dataLegend={item?.meta?.legend}\r\n              />\r\n              <View style={styles.lineChartTextDateContainer}>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[0]}\r\n                </Text>\r\n                <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n                <Text style={styles.lineChartText}>\r\n                  {lastValueDate(store, item._id).split('T')[1].split('.')[0]}\r\n                </Text>\r\n              </View>\r\n            </>\r\n          )}\r\n        </View>\r\n        <SafeAreaView>\r\n          <View style={{ marginTop: 5 }}>\r\n            <ListItemSeparator />\r\n            <FlatList\r\n              showsVerticalScrollIndicator={false}\r\n              showsHorizontalScrollIndicator={false}\r\n              data={dataDetails}\r\n              keyExtractor={(item, index) => index.toString()}\r\n              ItemSeparatorComponent={ListItemSeparator}\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              renderItem={({ item }) => <ChartDetailsCard item={item} />}\r\n            />\r\n          </View>\r\n        </SafeAreaView>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  chartContainer: {\r\n    maxHeight: '50%',\r\n  },\r\n  lineChartTextContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    padding: '1%',\r\n  },\r\n  lineChartTextTitle: {\r\n    alignSelf: 'center',\r\n    color: 'black',\r\n    fontSize: 13,\r\n    margin: 2,\r\n  },\r\n  lineChartText: {\r\n    alignSelf: 'center',\r\n    color: colors.primary,\r\n    fontSize: 13,\r\n    fontWeight: '600',\r\n  },\r\n  lineChartTextDateContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n});\r\n\r\nexport default ChartsDetailsScreen;\r\n"]},"metadata":{},"sourceType":"module"}