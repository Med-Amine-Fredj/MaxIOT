{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport color from \"../config/colors\";\nimport GreenDot from \"./GreenDot\";\nimport RedDot from \"./RedDot\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar screenHeigth = Dimensions.get('window').height;\n\nfunction date(_ref) {\n  var onPress = _ref.onPress,\n      realTime = _ref.realTime;\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      day = _useState2[0],\n      setDay = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      month = _useState4[0],\n      setMonth = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  useEffect(function () {\n    var d = new Date();\n    setDay(d.getDate());\n    setMonth(months[d.getMonth()]);\n    setYear(d.getFullYear());\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.txt,\n        children: [day, \" \"]\n      }), _jsxs(Text, {\n        style: styles.txt,\n        children: [month, \" \"]\n      }), _jsx(Text, {\n        style: styles.txt,\n        children: year\n      })]\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: onPress,\n      children: _jsxs(View, {\n        style: styles.dotContainer,\n        children: [_jsx(View, {\n          style: {\n            justifyContent: 'center',\n            marginLeft: '10%'\n          },\n          children: _jsx(Text, {\n            children: realTime ? 'Synchronous Data' : 'Asynchronous Data'\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(GreenDot, {\n            visible: realTime\n          }), _jsx(RedDot, {\n            visible: !realTime\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    marginTop: '5%',\n    flex: 1\n  },\n  txt: {\n    color: color.primary,\n    fontSize: 20,\n    fontWeight: '700'\n  },\n  dotContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: '5%',\n    height: 30,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignSelf: 'flex-end',\n    backgroundColor: 'white',\n    borderRadius: 15\n  }\n});\nexport default date;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/dateNow.js"],"names":["React","useState","useEffect","color","GreenDot","RedDot","screenHeigth","Dimensions","get","height","date","onPress","realTime","months","day","setDay","month","setMonth","year","setYear","d","Date","getDate","getMonth","getFullYear","styles","container","txt","dotContainer","justifyContent","marginLeft","flex","StyleSheet","create","flexDirection","marginTop","primary","fontSize","fontWeight","alignContent","alignSelf","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\n\r\nimport color from '../config/colors';\r\nimport GreenDot from './GreenDot';\r\nimport RedDot from './RedDot';\r\n\r\nlet screenHeigth = Dimensions.get('window').height;\r\n\r\nfunction date({ onPress, realTime }) {\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const [day, setDay] = useState('');\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n\r\n  useEffect(() => {\r\n    let d = new Date();\r\n    setDay(d.getDate());\r\n    setMonth(months[d.getMonth()]);\r\n    setYear(d.getFullYear());\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.txt}>{day} </Text>\r\n        <Text style={styles.txt}>{month} </Text>\r\n        <Text style={styles.txt}>{year}</Text>\r\n      </View>\r\n      <TouchableWithoutFeedback onPress={onPress}>\r\n        <View style={styles.dotContainer}>\r\n          <View style={{ justifyContent: 'center', marginLeft: '10%' }}>\r\n            <Text>{realTime ? 'Synchronous Data' : 'Asynchronous Data'}</Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <GreenDot visible={realTime} />\r\n            <RedDot visible={!realTime} />\r\n          </View>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    marginTop: '5%',\r\n    // maxHeight: h * 0.7,\r\n    flex: 1,\r\n  },\r\n  txt: {\r\n    color: color.primary,\r\n    fontSize: 20,\r\n    fontWeight: '700',\r\n  },\r\n  dotContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    marginTop: '5%',\r\n    height: 30,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    alignSelf: 'flex-end',\r\n    // marginLeft: '60%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default date;\r\n"]},"metadata":{},"sourceType":"module"}