{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport colors from \"../config/colors\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport Icon from \"./Icon\";\nimport { BEZIER_LINE, COMPLETED_GAUGE, INCOMPLETED_GAUGE, PIE, PROGRESS_RING, SIMPLE_BAR, SIMPLE_LINE, STACKED_BARS } from \"./charts/AllChartsTypesConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction SelectedDropdown(_ref) {\n  var realTime = _ref.realTime,\n      _onSelect = _ref.onSelect,\n      data = _ref.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountires = _useState2[1];\n\n  useEffect(function () {\n    data === INCOMPLETED_GAUGE || data === COMPLETED_GAUGE || data === PIE || data === PROGRESS_RING ? setCountires(['3 Days Ago', '1 Week Ago', '2 weeks Ago', '3 Weeks Ago', '1 Month Ago']) : data === SIMPLE_LINE || data === BEZIER_LINE ? setCountires(['Recent 24 Values', 'Set Of 24 Oldest Values', 'Set Of 24 Oldest Values', 'Set Of 24 Oldest Values', 'Oldest 24 Oldest Values']) : data === SIMPLE_BAR || data === STACKED_BARS ? setCountires(['Recent 12 Values', 'Set Of 12 Oldest Values', 'Set Of 12 Oldest Values', 'Set Of 12 Oldest Values', 'Oldest 12 Oldest Values']) : setCountires(['Waiting Data ...']);\n  }, []);\n  return _jsx(SelectDropdown, {\n    disabled: realTime,\n    data: countries,\n    dropdownIconPosition: \"right\",\n    renderDropdownIcon: function renderDropdownIcon() {\n      return _jsx(Icon, {\n        iconName: \"down\",\n        iconColor: \"black\",\n        iconSize: 20\n      });\n    },\n    buttonTextStyle: {\n      textAlign: 'center',\n      fontSize: 15,\n      fontWeight: 'bold'\n    },\n    buttonStyle: {\n      backgroundColor: !realTime ? 'white' : colors.gray,\n      borderWidth: 0.6,\n      borderColor: colors.gray,\n      borderRadius: 14,\n      maxHeight: '76%',\n      maxWidth: '60%'\n    },\n    dropdownStyle: {\n      backgroundColor: 'white',\n      borderWidth: 0.6,\n      borderColor: colors.gray,\n      borderRadius: 14\n    },\n    rowTextStyle: {\n      textAlign: 'center',\n      fontSize: 15,\n      fontWeight: 'bold'\n    },\n    defaultButtonText: realTime ? 'Disabled in Sync Mode' : 'Filter data by...',\n    onSelect: function onSelect(selectedItem, index) {\n      _onSelect(selectedItem);\n    }\n  });\n}\n\nexport default SelectedDropdown;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/SelectedDropdown.js"],"names":["React","useEffect","useState","colors","SelectDropdown","Icon","BEZIER_LINE","COMPLETED_GAUGE","INCOMPLETED_GAUGE","PIE","PROGRESS_RING","SIMPLE_BAR","SIMPLE_LINE","STACKED_BARS","SelectedDropdown","realTime","onSelect","data","countries","setCountires","textAlign","fontSize","fontWeight","backgroundColor","gray","borderWidth","borderColor","borderRadius","maxHeight","maxWidth","selectedItem","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP;AACA,SACEC,WADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,GAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,YARF;;;AAWA,SAASC,gBAAT,OAAwD;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,SAAkB,QAAlBA,QAAkB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACtD,kBAAkCf,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOgB,SAAP;AAAA,MAAkBC,YAAlB;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,IAAI,KAAKT,iBAAT,IACAS,IAAI,KAAKV,eADT,IAEAU,IAAI,KAAKR,GAFT,IAGAQ,IAAI,KAAKP,aAHT,GAIIS,YAAY,CAAC,CACX,YADW,EAEX,YAFW,EAGX,aAHW,EAIX,aAJW,EAKX,aALW,CAAD,CAJhB,GAWIF,IAAI,KAAKL,WAAT,IAAwBK,IAAI,KAAKX,WAAjC,GACAa,YAAY,CAAC,CACX,kBADW,EAEX,yBAFW,EAGX,yBAHW,EAIX,yBAJW,EAKX,yBALW,CAAD,CADZ,GAQAF,IAAI,KAAKN,UAAT,IAAuBM,IAAI,KAAKJ,YAAhC,GACAM,YAAY,CAAC,CACX,kBADW,EAEX,yBAFW,EAGX,yBAHW,EAIX,yBAJW,EAKX,yBALW,CAAD,CADZ,GAQAA,YAAY,CAAC,CAAC,kBAAD,CAAD,CA3BhB;AAkCD,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,SACE,KAAC,cAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,IAAI,EAAEG,SAFR;AAGE,IAAA,oBAAoB,EAAC,OAHvB;AAIE,IAAA,kBAAkB,EAAE;AAAA,aAClB,KAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC,OAAhC;AAAwC,QAAA,QAAQ,EAAE;AAAlD,QADkB;AAAA,KAJtB;AAOE,IAAA,eAAe,EAAE;AACfE,MAAAA,SAAS,EAAE,QADI;AAEfC,MAAAA,QAAQ,EAAE,EAFK;AAGfC,MAAAA,UAAU,EAAE;AAHG,KAPnB;AAYE,IAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE,CAACR,QAAD,GAAY,OAAZ,GAAsBZ,MAAM,CAACqB,IADnC;AAEXC,MAAAA,WAAW,EAAE,GAFF;AAGXC,MAAAA,WAAW,EAAEvB,MAAM,CAACqB,IAHT;AAIXG,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,SAAS,EAAE,KALA;AAMXC,MAAAA,QAAQ,EAAE;AANC,KAZf;AAoBE,IAAA,aAAa,EAAE;AACbN,MAAAA,eAAe,EAAE,OADJ;AAEbE,MAAAA,WAAW,EAAE,GAFA;AAGbC,MAAAA,WAAW,EAAEvB,MAAM,CAACqB,IAHP;AAIbG,MAAAA,YAAY,EAAE;AAJD,KApBjB;AA0BE,IAAA,YAAY,EAAE;AACZP,MAAAA,SAAS,EAAE,QADC;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,UAAU,EAAE;AAHA,KA1BhB;AA+BE,IAAA,iBAAiB,EACfP,QAAQ,GAAG,uBAAH,GAA6B,mBAhCzC;AAkCE,IAAA,QAAQ,EAAE,kBAACe,YAAD,EAAeC,KAAf,EAAyB;AACjCf,MAAAA,SAAQ,CAACc,YAAD,CAAR;AACD;AApCH,IADF;AAwCD;;AAED,eAAehB,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport colors from '../config/colors';\r\n\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport Icon from './Icon';\r\nimport {\r\n  BEZIER_LINE,\r\n  COMPLETED_GAUGE,\r\n  INCOMPLETED_GAUGE,\r\n  PIE,\r\n  PROGRESS_RING,\r\n  SIMPLE_BAR,\r\n  SIMPLE_LINE,\r\n  STACKED_BARS,\r\n} from './charts/AllChartsTypesConstants';\r\n\r\nfunction SelectedDropdown({ realTime, onSelect, data }) {\r\n  const [countries, setCountires] = useState([]);\r\n\r\n  useEffect(() => {\r\n    data === INCOMPLETED_GAUGE ||\r\n    data === COMPLETED_GAUGE ||\r\n    data === PIE ||\r\n    data === PROGRESS_RING\r\n      ? setCountires([\r\n          '3 Days Ago',\r\n          '1 Week Ago',\r\n          '2 weeks Ago',\r\n          '3 Weeks Ago',\r\n          '1 Month Ago',\r\n        ])\r\n      : data === SIMPLE_LINE || data === BEZIER_LINE\r\n      ? setCountires([\r\n          'Recent 24 Values',\r\n          'Set Of 24 Oldest Values',\r\n          'Set Of 24 Oldest Values',\r\n          'Set Of 24 Oldest Values',\r\n          'Oldest 24 Oldest Values',\r\n        ])\r\n      : data === SIMPLE_BAR || data === STACKED_BARS\r\n      ? setCountires([\r\n          'Recent 12 Values',\r\n          'Set Of 12 Oldest Values',\r\n          'Set Of 12 Oldest Values',\r\n          'Set Of 12 Oldest Values',\r\n          'Oldest 12 Oldest Values',\r\n        ])\r\n      : setCountires(['Waiting Data ...']);\r\n\r\n    // return () => {\r\n    //   second\r\n    // }\r\n    // console.log(data);\r\n    // console.log(countries);\r\n  }, []);\r\n\r\n  return (\r\n    <SelectDropdown\r\n      disabled={realTime}\r\n      data={countries}\r\n      dropdownIconPosition=\"right\"\r\n      renderDropdownIcon={() => (\r\n        <Icon iconName=\"down\" iconColor=\"black\" iconSize={20} />\r\n      )}\r\n      buttonTextStyle={{\r\n        textAlign: 'center',\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n      }}\r\n      buttonStyle={{\r\n        backgroundColor: !realTime ? 'white' : colors.gray,\r\n        borderWidth: 0.6,\r\n        borderColor: colors.gray,\r\n        borderRadius: 14,\r\n        maxHeight: '76%',\r\n        maxWidth: '60%',\r\n      }}\r\n      dropdownStyle={{\r\n        backgroundColor: 'white',\r\n        borderWidth: 0.6,\r\n        borderColor: colors.gray,\r\n        borderRadius: 14,\r\n      }}\r\n      rowTextStyle={{\r\n        textAlign: 'center',\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n      }}\r\n      defaultButtonText={\r\n        realTime ? 'Disabled in Sync Mode' : 'Filter data by...'\r\n      }\r\n      onSelect={(selectedItem, index) => {\r\n        onSelect(selectedItem);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SelectedDropdown;\r\n"]},"metadata":{},"sourceType":"module"}