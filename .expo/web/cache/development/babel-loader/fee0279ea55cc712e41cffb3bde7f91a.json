{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { forwardRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar voidFunction = function voidFunction() {};\n\nvar Input = function Input(_ref, ref) {\n  var inputStyle = _ref.inputStyle,\n      value = _ref.value,\n      valueColor = _ref.valueColor,\n      placeholder = _ref.placeholder,\n      placeholderTextColor = _ref.placeholderTextColor,\n      textAlign = _ref.textAlign,\n      onChangeText = _ref.onChangeText,\n      onEndEditing = _ref.onEndEditing,\n      onSubmitEditing = _ref.onSubmitEditing,\n      renderLeft = _ref.renderLeft,\n      renderRight = _ref.renderRight,\n      testID = _ref.testID;\n  var defaults = {\n    inputStyle: inputStyle,\n    value: value != null ? value : '',\n    valueColor: valueColor != null ? valueColor : '#000000',\n    placeholder: placeholder != null ? placeholder : '',\n    placeholderTextColor: placeholderTextColor != null ? placeholderTextColor : '#CACACA',\n    textAlign: textAlign || (I18nManager.isRTL ? 'right' : 'left'),\n    onChangeText: onChangeText != null ? onChangeText : voidFunction,\n    onEndEditing: onEndEditing != null ? onEndEditing : voidFunction,\n    onSubmitEditing: onSubmitEditing != null ? onSubmitEditing : voidFunction,\n    renderLeft: renderLeft,\n    renderRight: renderRight,\n    testID: testID\n  };\n\n  var onChangeTextValidator = function onChangeTextValidator(txt) {\n    if (txt.length == 1 && txt == ' ') {\n      return;\n    }\n\n    if (txt.length > 1 && txt.slice(-2) == '  ') {\n      return;\n    }\n\n    defaults.onChangeText(txt);\n  };\n\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.defaultInputStyle), defaults.inputStyle),\n    children: [defaults.renderLeft && _jsx(View, {\n      style: styles.pressableLeft,\n      children: defaults.renderLeft()\n    }), _jsx(TextInput, {\n      testID: defaults.testID,\n      ref: ref,\n      value: defaults.value,\n      placeholder: defaults.placeholder,\n      placeholderTextColor: defaults.placeholderTextColor,\n      textAlign: defaults.textAlign,\n      onChangeText: onChangeTextValidator,\n      onEndEditing: defaults.onEndEditing,\n      onSubmitEditing: defaults.onSubmitEditing,\n      style: _objectSpread(_objectSpread({}, styles.inputField), {}, {\n        color: defaults.valueColor\n      }),\n      returnKeyType: 'done',\n      textContentType: 'oneTimeCode',\n      allowFontScaling: false,\n      autoComplete: 'off',\n      autoCorrect: false,\n      autoCapitalize: 'none',\n      autoFocus: true\n    }), defaults.renderRight && _jsx(View, {\n      style: styles.pressableRight,\n      children: defaults.renderRight()\n    })]\n  });\n};\n\nexport default forwardRef(function (props, ref) {\n  return Input(props, ref);\n});\nvar styles = StyleSheet.create({\n  defaultInputStyle: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingHorizontal: '4%'\n  },\n  inputField: {\n    flex: 1,\n    height: '100%',\n    backgroundColor: '#0000',\n    textAlignVertical: 'center',\n    paddingVertical: 0\n  },\n  pressableLeft: {\n    height: '100%',\n    marginRight: '4%',\n    justifyContent: 'center'\n  },\n  pressableRight: {\n    height: '100%',\n    marginLeft: '4%',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/node_modules/react-native-select-dropdown/src/components/Input.js"],"names":["React","forwardRef","voidFunction","Input","ref","inputStyle","value","valueColor","placeholder","placeholderTextColor","textAlign","onChangeText","onEndEditing","onSubmitEditing","renderLeft","renderRight","testID","defaults","I18nManager","isRTL","onChangeTextValidator","txt","length","slice","styles","defaultInputStyle","pressableLeft","inputField","color","pressableRight","props","StyleSheet","create","width","height","backgroundColor","flexDirection","justifyContent","paddingHorizontal","flex","textAlignVertical","paddingVertical","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {forwardRef} from 'react';\nimport {View, TextInput, StyleSheet, I18nManager} from 'react-native';\n\nconst voidFunction = () => {};\n\nconst Input = (\n  {\n    inputStyle,\n    value,\n    valueColor,\n    placeholder,\n    placeholderTextColor,\n    textAlign,\n    onChangeText,\n    onEndEditing,\n    onSubmitEditing,\n    renderLeft,\n    renderRight,\n    testID,\n  },\n  ref,\n) => {\n  const defaults = {\n    inputStyle: inputStyle,\n    value: value ?? '',\n    valueColor: valueColor ?? '#000000',\n    placeholder: placeholder ?? '',\n    placeholderTextColor: placeholderTextColor ?? '#CACACA',\n    textAlign: textAlign || (I18nManager.isRTL ? 'right' : 'left'),\n    onChangeText: onChangeText ?? voidFunction,\n    onEndEditing: onEndEditing ?? voidFunction,\n    onSubmitEditing: onSubmitEditing ?? voidFunction,\n    renderLeft: renderLeft,\n    renderRight: renderRight,\n    testID: testID,\n  };\n\n  const onChangeTextValidator = txt => {\n    if (txt.length == 1 && txt == ' ') {\n      return;\n    }\n    if (txt.length > 1 && txt.slice(-2) == '  ') {\n      return;\n    }\n    defaults.onChangeText(txt);\n  };\n\n  return (\n    <View\n      style={{\n        ...styles.defaultInputStyle,\n        ...defaults.inputStyle,\n      }}>\n      {defaults.renderLeft && <View style={styles.pressableLeft}>{defaults.renderLeft()}</View>}\n      <TextInput\n        testID={defaults.testID}\n        ref={ref}\n        value={defaults.value}\n        placeholder={defaults.placeholder}\n        placeholderTextColor={defaults.placeholderTextColor}\n        textAlign={defaults.textAlign}\n        onChangeText={onChangeTextValidator}\n        onEndEditing={defaults.onEndEditing}\n        onSubmitEditing={defaults.onSubmitEditing}\n        //\n        style={{...styles.inputField, color: defaults.valueColor}}\n        returnKeyType={'done'}\n        textContentType={'oneTimeCode'}\n        allowFontScaling={false}\n        autoComplete={'off'}\n        autoCorrect={false}\n        autoCapitalize={'none'}\n        autoFocus={true}\n      />\n      {defaults.renderRight && <View style={styles.pressableRight}>{defaults.renderRight()}</View>}\n    </View>\n  );\n};\n\nexport default forwardRef((props, ref) => Input(props, ref));\n\nconst styles = StyleSheet.create({\n  defaultInputStyle: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingHorizontal: '4%',\n  },\n  inputField: {\n    flex: 1,\n    height: '100%',\n    backgroundColor: '#0000',\n    textAlignVertical: 'center',\n    paddingVertical: 0,\n  },\n  pressableLeft: {\n    height: '100%',\n    marginRight: '4%',\n    justifyContent: 'center',\n  },\n  pressableRight: {\n    height: '100%',\n    marginLeft: '4%',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}