{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { PieChart } from 'react-native-chart-kit';\nimport NoDataFound from \"../NoDataFound\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeigth = Dimensions.get('window').height;\nexport default function SimplePieCharts(_ref) {\n  var names = _ref.names,\n      values = _ref.values,\n      colors = _ref.colors,\n      size = _ref.size;\n  var data = [];\n  var populationSliced = values == null ? void 0 : values.slice(1);\n  var populationFinal = (populationSliced == null ? void 0 : populationSliced.length) == (colors == null ? void 0 : colors.length) ? populationSliced : (populationSliced == null ? void 0 : populationSliced.length) > (colors == null ? void 0 : colors.length) ? populationSliced == null ? void 0 : populationSliced.slice(-(colors == null ? void 0 : colors.length)) : populationSliced;\n\n  for (var i = 0; i < (names == null ? void 0 : names.length); i++) {\n    data.push({\n      name: names[i],\n      population: populationFinal[i],\n      color: colors[i],\n      legendFontColor: 'black',\n      legendFontSize: 15\n    });\n  }\n\n  var chartConfig = {\n    color: function color() {\n      return '#00BFBF';\n    }\n  };\n  return (populationSliced == null ? void 0 : populationSliced.length) >= (colors == null ? void 0 : colors.length) ? _jsx(View, {\n    style: styles.container,\n    children: _jsx(PieChart, {\n      data: data,\n      width: size == 'small' ? screenWidth * 0.5 : screenWidth,\n      height: size == 'small' ? screenHeigth * 0.2 : screenHeigth * 0.3,\n      chartConfig: chartConfig,\n      accessor: 'population',\n      paddingLeft: size == 'small' ? '50' : '20',\n      absolute: false,\n      hasLegend: size == 'small' ? false : true\n    })\n  }) : _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(NoDataFound, {\n      visible: true\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignContent: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/charts/SimplePieCharts.js"],"names":["PieChart","NoDataFound","screenWidth","Dimensions","get","width","screenHeigth","height","SimplePieCharts","names","values","colors","size","data","populationSliced","slice","populationFinal","length","i","push","name","population","color","legendFontColor","legendFontSize","chartConfig","styles","container","flex","StyleSheet","create","backgroundColor","alignContent","justifyContent"],"mappings":";;;;AAEA,SAASA,QAAT,QAAyB,wBAAzB;AACA,OAAOC,WAAP;;AAEA,IAAIC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA3C;AACA,IAAIC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA5C;AAEA,eAAe,SAASC,eAAT,OAA0D;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACvE,MAAIC,IAAI,GAAG,EAAX;AACA,MAAMC,gBAAgB,GAAGJ,MAAH,oBAAGA,MAAM,CAAEK,KAAR,CAAc,CAAd,CAAzB;AACA,MAAMC,eAAe,GACnB,CAAAF,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAEG,MAAlB,MAA4BN,MAA5B,oBAA4BA,MAAM,CAAEM,MAApC,IACIH,gBADJ,GAEI,CAAAA,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAEG,MAAlB,KAA2BN,MAA3B,oBAA2BA,MAAM,CAAEM,MAAnC,IACAH,gBADA,oBACAA,gBAAgB,CAAEC,KAAlB,CAAwB,EAACJ,MAAD,oBAACA,MAAM,CAAEM,MAAT,CAAxB,CADA,GAEAH,gBALN;;AAMA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGT,KAAH,oBAAGA,KAAK,CAAEQ,MAAV,CAAjB,EAAmCC,CAAC,EAApC,EAAwC;AACtCL,IAAAA,IAAI,CAACM,IAAL,CAAU;AACRC,MAAAA,IAAI,EAAEX,KAAK,CAACS,CAAD,CADH;AAERG,MAAAA,UAAU,EAAEL,eAAe,CAACE,CAAD,CAFnB;AAGRI,MAAAA,KAAK,EAAEX,MAAM,CAACO,CAAD,CAHL;AAIRK,MAAAA,eAAe,EAAE,OAJT;AAKRC,MAAAA,cAAc,EAAE;AALR,KAAV;AAOD;;AAuCD,MAAMC,WAAW,GAAG;AAClBH,IAAAA,KAAK,EAAE;AAAA,aAAM,SAAN;AAAA;AADW,GAApB;AAIA,SAAO,CAAAR,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAEG,MAAlB,MAA4BN,MAA5B,oBAA4BA,MAAM,CAAEM,MAApC,IACL,KAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEd,IADR;AAEE,MAAA,KAAK,EAAED,IAAI,IAAI,OAAR,GAAkBV,WAAW,GAAG,GAAhC,GAAsCA,WAF/C;AAGE,MAAA,MAAM,EAAEU,IAAI,IAAI,OAAR,GAAkBN,YAAY,GAAG,GAAjC,GAAuCA,YAAY,GAAG,GAHhE;AAIE,MAAA,WAAW,EAAEmB,WAJf;AAKE,MAAA,QAAQ,EAAE,YALZ;AAME,MAAA,WAAW,EAAEb,IAAI,IAAI,OAAR,GAAkB,IAAlB,GAAyB,IANxC;AAOE,MAAA,QAAQ,EAAE,KAPZ;AAQE,MAAA,SAAS,EAAEA,IAAI,IAAI,OAAR,GAAkB,KAAlB,GAA0B;AARvC;AADF,IADK,GAcL,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA,cACE,KAAC,WAAD;AAAa,MAAA,OAAO,EAAE;AAAtB;AADF,IAdF;AAkBD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAE,MADR;AAETC,IAAAA,YAAY,EAAE,QAFL;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, Dimensions } from 'react-native';\r\n\r\nimport { PieChart } from 'react-native-chart-kit';\r\nimport NoDataFound from '../NoDataFound';\r\n\r\nlet screenWidth = Dimensions.get('window').width;\r\nlet screenHeigth = Dimensions.get('window').height;\r\n\r\nexport default function SimplePieCharts({ names, values, colors, size }) {\r\n  let data = [];\r\n  const populationSliced = values?.slice(1);\r\n  const populationFinal =\r\n    populationSliced?.length == colors?.length\r\n      ? populationSliced\r\n      : populationSliced?.length > colors?.length\r\n      ? populationSliced?.slice(-colors?.length)\r\n      : populationSliced;\r\n  for (let i = 0; i < names?.length; i++) {\r\n    data.push({\r\n      name: names[i],\r\n      population: populationFinal[i],\r\n      color: colors[i],\r\n      legendFontColor: 'black',\r\n      legendFontSize: 15,\r\n    });\r\n  }\r\n\r\n  // const data = [\r\n  //   {\r\n  //     name: 'Seoul',\r\n  //     population: 21500000,\r\n  //     color: '#F4F1DE',\r\n  //     legendFontColor: 'black',\r\n  //     legendFontSize: 15,\r\n  //   },\r\n  //   {\r\n  //     name: 'Toronto',\r\n  //     population: 2800000,\r\n  //     color: '#E07A5F',\r\n  //     legendFontColor: 'black',\r\n  //     legendFontSize: 15,\r\n  //   },\r\n  //   {\r\n  //     name: 'Beijing',\r\n  //     population: 527612,\r\n  //     color: '#3D405B',\r\n  //     legendFontColor: 'black',\r\n  //     legendFontSize: 15,\r\n  //   },\r\n  //   {\r\n  //     name: 'New York',\r\n  //     population: 8538000,\r\n  //     color: '#81B29A',\r\n  //     legendFontColor: 'black',\r\n  //     legendFontSize: 15,\r\n  //   },\r\n  //   {\r\n  //     name: 'Moscow',\r\n  //     population: 11920000,\r\n  //     color: '#F2CC8F',\r\n  //     legendFontColor: 'black',\r\n  //     legendFontSize: 15,\r\n  //   },\r\n  // ];\r\n  const chartConfig = {\r\n    color: () => '#00BFBF',\r\n  };\r\n\r\n  return populationSliced?.length >= colors?.length ? (\r\n    <View style={styles.container}>\r\n      <PieChart\r\n        data={data}\r\n        width={size == 'small' ? screenWidth * 0.5 : screenWidth}\r\n        height={size == 'small' ? screenHeigth * 0.2 : screenHeigth * 0.3}\r\n        chartConfig={chartConfig}\r\n        accessor={'population'}\r\n        paddingLeft={size == 'small' ? '50' : '20'}\r\n        absolute={false}\r\n        hasLegend={size == 'small' ? false : true}\r\n      />\r\n    </View>\r\n  ) : (\r\n    <View style={{ flex: 1 }}>\r\n      <NoDataFound visible={true} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}