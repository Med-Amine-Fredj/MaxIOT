{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useSelector, useStore } from 'react-redux';\nimport Header from \"../components/Header\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ChartDetailsCard from \"../components/cards/ChartDetailsCard\";\nimport Icon from \"../components/Icon\";\nimport { chartValuesCalculator } from \"../../Helpers/Functions/chartsDataCalculator\";\nimport colors from \"../config/colors\";\nimport { lastValueDate } from \"../../Helpers/Functions/lastValueDate\";\nimport { borderColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction IconsDetailsScreen(_ref) {\n  var _item$meta, _item$meta2, _item$meta3, _chartValuesCalculato, _lastValueDate, _lastValueDate2, _lastValueDate2$split;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var store = useStore();\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    setTimeout(function () {\n      return setRefreshing(false);\n    }, 3000);\n  };\n\n  var realTime = route.params.realTime;\n  var id = route.params.id;\n\n  var _useState3 = useState(realTime),\n      _useState4 = _slicedToArray(_useState3, 2),\n      realTim = _useState4[0],\n      setReal = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      item = _useState6[0],\n      setItem = _useState6[1];\n\n  var deviceStyle = useSelector(function (state) {\n    var _state$entities, _state$entities$devic;\n\n    return state == null ? void 0 : (_state$entities = state.entities) == null ? void 0 : (_state$entities$devic = _state$entities.devices) == null ? void 0 : _state$entities$devic.devicesStyle;\n  });\n  var deviceData = useSelector(function (state) {\n    var _state$entities2, _state$entities2$devi;\n\n    return realTim && (state == null ? void 0 : (_state$entities2 = state.entities) == null ? void 0 : (_state$entities2$devi = _state$entities2.devicesData) == null ? void 0 : _state$entities2$devi.devicesData);\n  });\n  useEffect(function () {\n    setItem(deviceStyle == null ? void 0 : deviceStyle.filter(function (n) {\n      return (n == null ? void 0 : n._id) === id;\n    })[0]);\n  }, [item, deviceStyle]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      title: item == null ? void 0 : item.name,\n      realTime: realTim,\n      onRealTimePress: function onRealTimePress() {\n        return setReal(!realTim);\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          borderColor: colors.gray,\n          borderWidth: 1,\n          borderRadius: 100,\n          margin: 10\n        },\n        children: [_jsx(View, {\n          style: styles.iconContainer,\n          children: _jsx(Icon, {\n            iconName: item == null ? void 0 : (_item$meta = item.meta) == null ? void 0 : _item$meta.iconName,\n            iconColor: item == null ? void 0 : (_item$meta2 = item.meta) == null ? void 0 : _item$meta2.iconColor,\n            iconBackgroundColor: item == null ? void 0 : (_item$meta3 = item.meta) == null ? void 0 : _item$meta3.iconBackgroundColor,\n            size: \"large\"\n          })\n        }), _jsx(View, {\n          style: styles.textContainer,\n          children: _jsx(Text, {\n            style: styles.txt,\n            children: chartValuesCalculator(store, item._id) ? chartValuesCalculator(store, item._id)[((_chartValuesCalculato = chartValuesCalculator(store, item._id)) == null ? void 0 : _chartValuesCalculato.length) - 1] : ''\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.lineChartTextDateContainer,\n        children: [_jsx(Text, {\n          style: styles.lineChartTextTitle,\n          children: \"Last Value Date: \"\n        }), _jsx(Text, {\n          style: styles.lineChartText,\n          children: (_lastValueDate = lastValueDate(store, item._id)) == null ? void 0 : _lastValueDate.split('T')[0]\n        }), _jsx(Text, {\n          style: styles.lineChartTextTitle,\n          children: \"Last Value Time: \"\n        }), _jsx(Text, {\n          style: styles.lineChartText,\n          children: (_lastValueDate2 = lastValueDate(store, item._id)) == null ? void 0 : (_lastValueDate2$split = _lastValueDate2.split('T')[1]) == null ? void 0 : _lastValueDate2$split.split('.')[0]\n        })]\n      }), _jsxs(SafeAreaView, {\n        style: {\n          flex: 2,\n          backgroundColor: 'white'\n        },\n        children: [_jsx(ListItemSeparator, {}), _jsx(FlatList, {\n          showsVerticalScrollIndicator: false,\n          showsHorizontalScrollIndicator: false,\n          data: dataDetails,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          ItemSeparatorComponent: ListItemSeparator,\n          refreshing: refreshing,\n          onRefresh: onRefresh,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(ChartDetailsCard, {\n              item: item\n            });\n          }\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  iconContainer: {\n    marginTop: '3%',\n    marginBottom: '7%',\n    marginLeft: '10%'\n  },\n  textContainer: {\n    marginTop: '5%',\n    paddingHorizontal: '10%'\n  },\n  txt: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  lineChartTextDateContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  lineChartTextTitle: {\n    alignSelf: 'center',\n    color: 'black',\n    fontSize: 13,\n    margin: 2\n  },\n  lineChartText: {\n    alignSelf: 'center',\n    color: colors.primary,\n    fontSize: 13,\n    fontWeight: '600'\n  }\n});\nexport default IconsDetailsScreen;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/Screens/IconsDetailsScreen.js"],"names":["React","useState","useEffect","useSelector","useStore","Header","ListItemSeparator","ChartDetailsCard","Icon","chartValuesCalculator","colors","lastValueDate","borderColor","IconsDetailsScreen","navigation","route","refreshing","setRefreshing","store","onRefresh","setTimeout","realTime","params","id","realTim","setReal","item","setItem","deviceStyle","state","entities","devices","devicesStyle","deviceData","devicesData","filter","n","_id","goBack","name","styles","container","flexDirection","justifyContent","gray","borderWidth","borderRadius","margin","iconContainer","meta","iconName","iconColor","iconBackgroundColor","textContainer","txt","length","lineChartTextDateContainer","lineChartTextTitle","lineChartText","split","flex","backgroundColor","dataDetails","index","toString","StyleSheet","create","marginTop","marginBottom","marginLeft","paddingHorizontal","fontSize","fontWeight","alignSelf","color","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, Text, SafeAreaView } from 'react-native';\r\nimport { useSelector, useStore } from 'react-redux';\r\n\r\nimport Header from '../components/Header';\r\nimport ListItemSeparator from '../components/ListItemSeparator';\r\nimport ChartDetailsCard from '../components/cards/ChartDetailsCard';\r\nimport Icon from '../components/Icon';\r\nimport { chartValuesCalculator } from '../../Helpers/Functions/chartsDataCalculator';\r\nimport colors from '../config/colors';\r\nimport { lastValueDate } from '../../Helpers/Functions/lastValueDate';\r\nimport { borderColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\r\n\r\nfunction IconsDetailsScreen({ navigation, route }) {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const store = useStore();\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    setTimeout(() => setRefreshing(false), 3000);\r\n  };\r\n\r\n  const realTime = route.params.realTime;\r\n  const id = route.params.id;\r\n\r\n  const [realTim, setReal] = useState(realTime);\r\n\r\n  const [item, setItem] = useState({});\r\n\r\n  const deviceStyle = useSelector(\r\n    (state) => state?.entities?.devices?.devicesStyle\r\n  );\r\n\r\n  const deviceData = useSelector(\r\n    (state) => realTim && state?.entities?.devicesData?.devicesData\r\n  );\r\n\r\n  useEffect(() => {\r\n    setItem(deviceStyle?.filter((n) => n?._id === id)[0]);\r\n  }, [item, deviceStyle]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        onPress={() => navigation.goBack()}\r\n        title={item?.name}\r\n        realTime={realTim}\r\n        onRealTimePress={() => setReal(!realTim)}\r\n      />\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            borderColor: colors.gray,\r\n            borderWidth: 1,\r\n            borderRadius: 100,\r\n            margin: 10,\r\n          }}\r\n        >\r\n          <View style={styles.iconContainer}>\r\n            <Icon\r\n              iconName={item?.meta?.iconName}\r\n              iconColor={item?.meta?.iconColor}\r\n              iconBackgroundColor={item?.meta?.iconBackgroundColor}\r\n              size=\"large\"\r\n            />\r\n          </View>\r\n          <View style={styles.textContainer}>\r\n            <Text style={styles.txt}>\r\n              {chartValuesCalculator(store, item._id)\r\n                ? chartValuesCalculator(store, item._id)[\r\n                    chartValuesCalculator(store, item._id)?.length - 1\r\n                  ]\r\n                : ''}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.lineChartTextDateContainer}>\r\n          <Text style={styles.lineChartTextTitle}>Last Value Date: </Text>\r\n          <Text style={styles.lineChartText}>\r\n            {lastValueDate(store, item._id)?.split('T')[0]}\r\n          </Text>\r\n          <Text style={styles.lineChartTextTitle}>Last Value Time: </Text>\r\n          <Text style={styles.lineChartText}>\r\n            {lastValueDate(store, item._id)?.split('T')[1]?.split('.')[0]}\r\n          </Text>\r\n        </View>\r\n        <SafeAreaView style={{ flex: 2, backgroundColor: 'white' }}>\r\n          <ListItemSeparator />\r\n          <FlatList\r\n            showsVerticalScrollIndicator={false}\r\n            showsHorizontalScrollIndicator={false}\r\n            data={dataDetails}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            ItemSeparatorComponent={ListItemSeparator}\r\n            refreshing={refreshing}\r\n            onRefresh={onRefresh}\r\n            renderItem={({ item }) => <ChartDetailsCard item={item} />}\r\n          />\r\n        </SafeAreaView>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 2,\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center',\r\n  },\r\n  iconContainer: {\r\n    marginTop: '3%',\r\n    marginBottom: '7%',\r\n    marginLeft: '10%',\r\n  },\r\n  textContainer: {\r\n    marginTop: '5%',\r\n    paddingHorizontal: '10%',\r\n  },\r\n  txt: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n  },\r\n  lineChartTextDateContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  lineChartTextTitle: {\r\n    alignSelf: 'center',\r\n    color: 'black',\r\n    fontSize: 13,\r\n    margin: 2,\r\n  },\r\n  lineChartText: {\r\n    alignSelf: 'center',\r\n    color: colors.primary,\r\n    fontSize: 13,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default IconsDetailsScreen;\r\n"]},"metadata":{},"sourceType":"module"}