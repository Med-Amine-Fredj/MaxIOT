{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar devices = {\n  initialState: {\n    loading: false,\n    error: null\n  },\n  reducers: {\n    get_devices_request: function get_devices_request(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: true\n      });\n    },\n    get_devices_success: function get_devices_success(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        devicesStyle: action.payload.data\n      });\n    },\n    get_devices_fail: function get_devices_fail(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        error: action.payload\n      });\n    },\n    get_devices_reset: function get_devices_reset(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        devicesStyle: [],\n        error: null\n      });\n    },\n    update_devices_request: function update_devices_request(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: true\n      });\n    },\n    update_devices_success: function update_devices_success(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        devicesStyle: action.payload.data\n      });\n    },\n    update_devices_fail: function update_devices_fail(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        error: action.payload\n      });\n    },\n    remove_devices_request: function remove_devices_request(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: true\n      });\n    },\n    remove_devices_success: function remove_devices_success(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        devicesStyle: action.payload.data\n      });\n    },\n    remove_devices_fail: function remove_devices_fail(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        error: action.payload\n      });\n    },\n    insert_devices_request: function insert_devices_request(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: true\n      });\n    },\n    insert_devices_success: function insert_devices_success(dataSet, action) {\n      dataSet.devicesStyle.push(action.payload.data);\n      dataSet.loading = false;\n    },\n    insert_devices_fail: function insert_devices_fail(dataSet, action) {\n      return _objectSpread(_objectSpread({}, dataSet), {}, {\n        loading: false,\n        error: action.payload\n      });\n    }\n  }\n};\nexport default devices;\nexport var GET_DEVICES_REQUEST = 'devices/get_devices_request';\nexport var GET_DEVICES_SUCCESS = 'devices/get_devices_success';\nexport var GET_DEVICES_FAIL = 'devices/get_devices_fail';\nexport var GET_DEVICES_RESET = 'devices/get_devices_reset';\nexport var UPDATE_DEVICES_REQUEST = 'devices/update_devices_request';\nexport var UPDATE_DEVICES_SUCCESS = 'devices/update_devices_success';\nexport var UPDATE_DEVICES_FAIL = 'devices/update_devices_fail';\nexport var REMOVE_DEVICES_REQUEST = 'devices/remove_devices_request';\nexport var REMOVE_DEVICES_SUCCESS = 'devices/remove_devices_success';\nexport var REMOVE_DEVICES_FAIL = 'devices/remove_devices_fail';\nexport var INSERT_DEVICES_REQUEST = 'devices/insert_devices_request';\nexport var INSERT_DEVICES_SUCCESS = 'devices/insert_devices_success';\nexport var INSERT_DEVICES_FAIL = 'devices/insert_devices_fail';","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/store/slices/reducers/devices.js"],"names":["devices","initialState","loading","error","reducers","get_devices_request","dataSet","action","get_devices_success","devicesStyle","payload","data","get_devices_fail","get_devices_reset","update_devices_request","update_devices_success","update_devices_fail","remove_devices_request","remove_devices_success","remove_devices_fail","insert_devices_request","insert_devices_success","push","insert_devices_fail","GET_DEVICES_REQUEST","GET_DEVICES_SUCCESS","GET_DEVICES_FAIL","GET_DEVICES_RESET","UPDATE_DEVICES_REQUEST","UPDATE_DEVICES_SUCCESS","UPDATE_DEVICES_FAIL","REMOVE_DEVICES_REQUEST","REMOVE_DEVICES_SUCCESS","REMOVE_DEVICES_FAIL","INSERT_DEVICES_REQUEST","INSERT_DEVICES_SUCCESS","INSERT_DEVICES_FAIL"],"mappings":"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","sourcesContent":["const devices = {\r\n  initialState: {\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    get_devices_request: (dataSet, action) => {\r\n      return { ...dataSet, loading: true };\r\n    },\r\n    get_devices_success: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, devicesStyle: action.payload.data };\r\n    },\r\n    get_devices_fail: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, error: action.payload };\r\n    },\r\n    get_devices_reset: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, devicesStyle: [], error: null };\r\n    },\r\n\r\n    update_devices_request: (dataSet, action) => {\r\n      return { ...dataSet, loading: true };\r\n    },\r\n    update_devices_success: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, devicesStyle: action.payload.data };\r\n    },\r\n    update_devices_fail: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, error: action.payload };\r\n    },\r\n\r\n    remove_devices_request: (dataSet, action) => {\r\n      return { ...dataSet, loading: true };\r\n    },\r\n    remove_devices_success: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, devicesStyle: action.payload.data };\r\n    },\r\n    remove_devices_fail: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, error: action.payload };\r\n    },\r\n\r\n    insert_devices_request: (dataSet, action) => {\r\n      return { ...dataSet, loading: true };\r\n    },\r\n    insert_devices_success: (dataSet, action) => {\r\n      dataSet.devicesStyle.push(action.payload.data);\r\n      dataSet.loading = false;\r\n    },\r\n    insert_devices_fail: (dataSet, action) => {\r\n      return { ...dataSet, loading: false, error: action.payload };\r\n    },\r\n  },\r\n};\r\n\r\nexport default devices;\r\nexport const GET_DEVICES_REQUEST = 'devices/get_devices_request';\r\nexport const GET_DEVICES_SUCCESS = 'devices/get_devices_success';\r\nexport const GET_DEVICES_FAIL = 'devices/get_devices_fail';\r\nexport const GET_DEVICES_RESET = 'devices/get_devices_reset';\r\n\r\nexport const UPDATE_DEVICES_REQUEST = 'devices/update_devices_request';\r\nexport const UPDATE_DEVICES_SUCCESS = 'devices/update_devices_success';\r\nexport const UPDATE_DEVICES_FAIL = 'devices/update_devices_fail';\r\n\r\nexport const REMOVE_DEVICES_REQUEST = 'devices/remove_devices_request';\r\nexport const REMOVE_DEVICES_SUCCESS = 'devices/remove_devices_success';\r\nexport const REMOVE_DEVICES_FAIL = 'devices/remove_devices_fail';\r\n\r\nexport const INSERT_DEVICES_REQUEST = 'devices/insert_devices_request';\r\nexport const INSERT_DEVICES_SUCCESS = 'devices/insert_devices_success';\r\nexport const INSERT_DEVICES_FAIL = 'devices/insert_devices_fail';\r\n"]},"metadata":{},"sourceType":"module"}