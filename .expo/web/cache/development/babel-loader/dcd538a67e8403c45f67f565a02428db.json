{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport colors from \"../../config/colors\";\nimport StackedBarsChart from \"../charts/StackedBarsChart\";\nimport MultiBarChart from \"../charts/MultiBarChart\";\nimport { SIMPLE_BAR, STACKED_BARS } from \"../charts/AllChartsTypesConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar w = Dimensions.get('window').width;\nvar h = Dimensions.get('window').height;\n\nfunction BarsChartsCard(_ref) {\n  var _chartObject$meta, _chartObject$meta2, _chartObject$meta3, _chartObject$meta4;\n\n  var chartObject = _ref.chartObject,\n      onPress = _ref.onPress,\n      values = _ref.values,\n      stackedNumber = _ref.stackedNumber;\n  return (chartObject == null ? void 0 : chartObject.chartType) === STACKED_BARS ? _jsx(TouchableWithoutFeedback, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(View, {\n        style: styles.titleContainer,\n        children: _jsx(Text, {\n          style: styles.title,\n          children: chartObject == null ? void 0 : chartObject.name\n        })\n      }), _jsx(View, {\n        style: styles.chartContainer,\n        children: _jsx(StackedBarsChart, {\n          dataArray: values || [0],\n          stackedNumber: stackedNumber,\n          legendArray: chartObject == null ? void 0 : (_chartObject$meta = chartObject.meta) == null ? void 0 : _chartObject$meta.legend,\n          colorsArray: chartObject == null ? void 0 : (_chartObject$meta2 = chartObject.meta) == null ? void 0 : _chartObject$meta2.colors\n        })\n      })]\n    })\n  }) : (chartObject == null ? void 0 : chartObject.chartType) === SIMPLE_BAR && _jsx(TouchableWithoutFeedback, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(View, {\n        style: styles.titleContainer,\n        children: _jsx(Text, {\n          style: styles.title,\n          children: chartObject == null ? void 0 : chartObject.name\n        })\n      }), _jsx(View, {\n        style: styles.chartContainer,\n        children: _jsx(MultiBarChart, {\n          size: \"small\",\n          values: values || [0],\n          color: chartObject == null ? void 0 : (_chartObject$meta3 = chartObject.meta) == null ? void 0 : _chartObject$meta3.colors[(chartObject == null ? void 0 : (_chartObject$meta4 = chartObject.meta) == null ? void 0 : _chartObject$meta4.colors.length) - 1]\n        })\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    backgroundColor: colors.white,\n    marginTop: h * 0.015,\n    paddingTop: '10%',\n    overflow: 'hidden',\n    height: h * 0.3,\n    width: w * 0.89,\n    marginHorizontal: 3,\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  chartContainer: {\n    justifyContent: 'center',\n    minHeight: '90%',\n    maxHeight: '90%'\n  },\n  titleContainer: {\n    alignSelf: 'center',\n    marginBottom: '3%'\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: 'bold'\n  }\n});\nexport default BarsChartsCard;","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/cards/BarsChartsCard.js"],"names":["React","colors","StackedBarsChart","MultiBarChart","SIMPLE_BAR","STACKED_BARS","w","Dimensions","get","width","h","height","BarsChartsCard","chartObject","onPress","values","stackedNumber","chartType","styles","card","titleContainer","title","name","chartContainer","meta","legend","length","StyleSheet","create","borderRadius","backgroundColor","white","marginTop","paddingTop","overflow","marginHorizontal","justifyContent","alignContent","minHeight","maxHeight","alignSelf","marginBottom","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Text,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport colors from '../../config/colors';\r\n\r\nimport StackedBarsChart from '../charts/StackedBarsChart';\r\nimport MultiBarChart from '../charts/MultiBarChart';\r\nimport { SIMPLE_BAR, STACKED_BARS } from '../charts/AllChartsTypesConstants';\r\n\r\nlet w = Dimensions.get('window').width;\r\nlet h = Dimensions.get('window').height;\r\n\r\nfunction BarsChartsCard({ chartObject, onPress, values, stackedNumber }) {\r\n  return chartObject?.chartType === STACKED_BARS ? (\r\n    <TouchableWithoutFeedback onPress={onPress}>\r\n      <View style={styles.card}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.title}>{chartObject?.name}</Text>\r\n        </View>\r\n        <View style={styles.chartContainer}>\r\n          <StackedBarsChart\r\n            dataArray={values || [0]}\r\n            stackedNumber={stackedNumber}\r\n            legendArray={chartObject?.meta?.legend}\r\n            colorsArray={chartObject?.meta?.colors}\r\n          />\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  ) : (\r\n    chartObject?.chartType === SIMPLE_BAR && (\r\n      <TouchableWithoutFeedback onPress={onPress}>\r\n        <View style={styles.card}>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title}>{chartObject?.name}</Text>\r\n          </View>\r\n          <View style={styles.chartContainer}>\r\n            <MultiBarChart\r\n              size=\"small\"\r\n              values={values || [0]}\r\n              color={\r\n                chartObject?.meta?.colors[chartObject?.meta?.colors.length - 1]\r\n              }\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    )\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // flex: 1,\r\n    borderRadius: 10,\r\n    backgroundColor: colors.white,\r\n    marginTop: h * 0.015,\r\n    paddingTop: '10%',\r\n    overflow: 'hidden',\r\n    height: h * 0.3,\r\n    width: w * 0.89,\r\n    marginHorizontal: 3,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  chartContainer: {\r\n    justifyContent: 'center',\r\n    minHeight: '90%',\r\n    maxHeight: '90%',\r\n  },\r\n  titleContainer: {\r\n    alignSelf: 'center',\r\n    marginBottom: '3%',\r\n  },\r\n  title: {\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default BarsChartsCard;\r\n"]},"metadata":{},"sourceType":"module"}