{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlices } from \"./slices\";\nimport getMiddlewaresArray from \"./middlewares\";\nimport { createTransform, createMigrate, persistStore, persistReducer } from \"redux-persist\";\nimport { migrations } from \"./migrations\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { noPersistedSlices, slicesArray } from \"./defaultStoreData\";\nimport omit from \"lodash/omit\";\nimport initSubscriber from \"redux-subscriber\";\nvar MIGRATION_DEBUG = false;\nvar ENABLE_PERSIST = true;\n\nvar createSlicesReducers = function createSlicesReducers(slices, _combineReducers) {\n  var slicesReducers = {};\n  Object.keys(slices).map(function (slice) {\n    slicesReducers[slices[slice].name] = slices[slice].reducer;\n  });\n  return _combineReducers(slicesReducers);\n};\n\nvar createReducer = function createReducer(slices, _combineReducers) {\n  var entitiesReducer = createSlicesReducers(slices, _combineReducers);\n  return _combineReducers({\n    entities: entitiesReducer\n  });\n};\n\nvar configureImxStore = function configureImxStore(_ref) {\n  var slices = _ref.slices,\n      reducer = _ref.reducer,\n      _configureStore = _ref._configureStore,\n      _persistReducer = _ref._persistReducer,\n      _persistStore = _ref._persistStore,\n      _storage = _ref._storage,\n      _getMiddlewaresArray = _ref._getMiddlewaresArray;\n  var blacklistTransform = createTransform(function (inboundState, key) {\n    if (key === \"entities\") {\n      return omit(inboundState, noPersistedSlices);\n    } else {\n      return _objectSpread({}, inboundState);\n    }\n  });\n  var persistConfig = {\n    key: \"entities\",\n    storage: _storage,\n    transforms: [blacklistTransform],\n    version: 0,\n    migrate: createMigrate(migrations, {\n      debug: MIGRATION_DEBUG\n    })\n  };\n  var persistedReducer = ENABLE_PERSIST ? _persistReducer(persistConfig, reducer) : reducer;\n\n  var store = _configureStore({\n    reducer: persistedReducer,\n    middleware: function middleware(getDefaultMiddleware) {\n      return getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false\n      }).concat(_getMiddlewaresArray(slices));\n    }\n  });\n\n  var persistor = ENABLE_PERSIST ? _persistStore(store) : null;\n  initSubscriber(store);\n  return {\n    persistor: persistor,\n    store: store\n  };\n};\n\nvar createStore = function createStore() {\n  var appsSlices = createSlices(slicesArray);\n  var reducer = createReducer(appsSlices, combineReducers);\n  var slices = appsSlices;\n  var storeConfig = {\n    slicesArray: slicesArray,\n    slices: slices,\n    reducer: reducer,\n    _configureStore: configureStore,\n    _persistStore: persistStore,\n    _storage: AsyncStorage,\n    _persistReducer: persistReducer,\n    _getMiddlewaresArray: getMiddlewaresArray\n  };\n\n  var _configureImxStore = configureImxStore(storeConfig),\n      store = _configureImxStore.store,\n      persistor = _configureImxStore.persistor;\n\n  store.slices = slices;\n  store.persistor = persistor;\n  return {\n    slices: slices,\n    store: store,\n    persistor: persistor\n  };\n};\n\nexport var defaultStore = createStore();","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/store/index.js"],"names":["combineReducers","configureStore","createSlices","getMiddlewaresArray","createTransform","createMigrate","persistStore","persistReducer","migrations","AsyncStorage","noPersistedSlices","slicesArray","omit","initSubscriber","MIGRATION_DEBUG","ENABLE_PERSIST","createSlicesReducers","slices","_combineReducers","slicesReducers","Object","keys","map","slice","name","reducer","createReducer","entitiesReducer","entities","configureImxStore","_configureStore","_persistReducer","_persistStore","_storage","_getMiddlewaresArray","blacklistTransform","inboundState","key","persistConfig","storage","transforms","version","migrate","debug","persistedReducer","store","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","concat","persistor","createStore","appsSlices","storeConfig","defaultStore"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlices } from \"./slices\";\nimport getMiddlewaresArray from \"./middlewares\";\nimport {\n  createTransform,\n  createMigrate,\n  persistStore,\n  persistReducer,\n} from \"redux-persist\";\nimport { migrations } from \"./migrations\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { noPersistedSlices, slicesArray } from \"./defaultStoreData\";\nimport omit from \"lodash/omit\";\nimport initSubscriber from \"redux-subscriber\";\n\nconst MIGRATION_DEBUG = false;\nconst ENABLE_PERSIST = true;\n\nconst createSlicesReducers = (slices, _combineReducers) => {\n  let slicesReducers = {};\n  Object.keys(slices).map((slice) => {\n    slicesReducers[slices[slice].name] = slices[slice].reducer;\n  });\n  return _combineReducers(slicesReducers);\n};\n\nconst createReducer = (slices, _combineReducers) => {\n  const entitiesReducer = createSlicesReducers(slices, _combineReducers);\n  return _combineReducers({\n    entities: entitiesReducer,\n  });\n};\nconst configureImxStore = ({\n  slices,\n  reducer,\n  _configureStore,\n  _persistReducer,\n  _persistStore,\n  _storage,\n  _getMiddlewaresArray,\n}) => {\n  const blacklistTransform = createTransform((inboundState, key) => {\n    if (key === \"entities\") {\n      return omit(inboundState, noPersistedSlices);\n    } else {\n      return { ...inboundState };\n    }\n  });\n  const persistConfig = {\n    key: \"entities\",\n    storage: _storage,\n    transforms: [blacklistTransform],\n    version: 0,\n    migrate: createMigrate(migrations, { debug: MIGRATION_DEBUG }),\n  };\n  const persistedReducer = ENABLE_PERSIST\n    ? _persistReducer(persistConfig, reducer)\n    : reducer;\n  let store = _configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n      }).concat(_getMiddlewaresArray(slices)),\n  });\n\n  let persistor = ENABLE_PERSIST ? _persistStore(store) : null;\n  initSubscriber(store);\n\n  return { persistor, store };\n};\n\nconst createStore = () => {\n  const appsSlices = createSlices(slicesArray);\n  const reducer = createReducer(appsSlices, combineReducers);\n  const slices = appsSlices;\n  const storeConfig = {\n    slicesArray: slicesArray,\n    slices,\n    reducer: reducer,\n    _configureStore: configureStore,\n    _persistStore: persistStore,\n    _storage: AsyncStorage,\n    _persistReducer: persistReducer,\n    _getMiddlewaresArray: getMiddlewaresArray,\n  };\n  const { store, persistor } = configureImxStore(storeConfig);\n  store.slices = slices;\n  store.persistor = persistor;\n  return { slices, store, persistor };\n};\n\nexport const defaultStore = createStore();\n"]},"metadata":{},"sourceType":"module"}