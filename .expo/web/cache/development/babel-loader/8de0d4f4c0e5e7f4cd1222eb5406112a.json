{"ast":null,"code":"import { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport colors from \"../../config/colors\";\nimport NoDataFound from \"../NoDataFound\";\nimport { schedulePushNotification } from \"../../../Helpers/notification\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar w = Dimensions.get('window').width;\nvar h = Dimensions.get('window').height;\nexport default function gouge(_ref) {\n  var value = _ref.value,\n      size = _ref.size,\n      min = _ref.min,\n      max = _ref.max,\n      warning = _ref.warning;\n  var levelStyle = StyleSheet.flatten([styles.txt, {\n    color: value <= min || value >= max ? colors.dark_red : value == warning ? colors.dark_warning : colors.light_green,\n    fontSize: size == 'large' ? 60 : 30\n  }]);\n  var messageStyle = StyleSheet.flatten([styles.message, {\n    color: value <= min || value >= max ? colors.dark_red : value == warning ? colors.dark_warning : colors.light_green\n  }]);\n  return _jsx(_Fragment, {\n    children: value === 0 ? _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(NoDataFound, {\n        visible: true\n      })\n    }) : _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: {\n          minHeight: '10%'\n        },\n        children: [value === warning && _jsxs(View, {\n          style: styles.messageContainer,\n          children: [_jsx(AntDesign, {\n            name: \"warning\",\n            size: size == 'large' ? 30 : 25,\n            color: colors.dark_warning\n          }), size == 'large' && _jsx(Text, {\n            style: messageStyle,\n            children: \"Warning\"\n          })]\n        }), (value >= max || value <= min) && _jsxs(View, {\n          style: styles.messageContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"error-outline\",\n            size: size == 'large' ? 30 : 25,\n            color: colors.dark_red\n          }), size == 'large' && _jsx(Text, {\n            style: messageStyle,\n            children: \"Error\"\n          })]\n        })]\n      }), _jsx(View, {\n        style: {\n          alignSelf: 'center'\n        },\n        children: _jsx(AnimatedCircularProgress, {\n          size: size == 'large' ? h * 0.34 : h * 0.18,\n          width: size == 'large' ? w * 0.025 : w * 0.013,\n          fill: value,\n          backgroundWidth: size == 'large' ? w * 0.018 : w * 0.01,\n          tintColor: value <= min || value >= max ? colors.dark_red : value == warning ? colors.dark_warning : colors.light_green,\n          tintTransparency: false,\n          backgroundColor: colors.gray,\n          arcSweepAngle: 240,\n          rotation: 242,\n          lineCap: \"round\",\n          duration: 0,\n          children: function children(fill) {\n            return _jsxs(Text, {\n              style: levelStyle,\n              children: [Math.round(fill), \"%\"]\n            });\n          }\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white\n  },\n  valueContainer: {\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  txt: {\n    fontSize: 34,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  messageContainer: {\n    flexDirection: 'row',\n    alignSelf: 'flex-end',\n    marginRight: '5%'\n  },\n  message: {\n    fontSize: 14,\n    marginTop: 3,\n    marginLeft: 3\n  },\n  percent: {\n    textAlign: 'center',\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginTop: '10%'\n  }\n});","map":{"version":3,"sources":["C:/Users/amine/OneDrive/Desktop/PFE/Examples/designTypes/app/components/charts/IncompletedGauge.js"],"names":["AnimatedCircularProgress","AntDesign","MaterialIcons","colors","NoDataFound","schedulePushNotification","w","Dimensions","get","width","h","height","gouge","value","size","min","max","warning","levelStyle","StyleSheet","flatten","styles","txt","color","dark_red","dark_warning","light_green","fontSize","messageStyle","message","flex","container","minHeight","messageContainer","alignSelf","gray","fill","Math","round","create","backgroundColor","white","valueContainer","flexDirection","alignContent","justifyContent","fontWeight","textAlign","marginRight","marginTop","marginLeft","percent"],"mappings":"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","sourcesContent":["import { AnimatedCircularProgress } from 'react-native-circular-progress';\r\n\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Dimensions } from 'react-native';\r\n\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nimport colors from '../../config/colors';\r\nimport NoDataFound from '../NoDataFound';\r\nimport { schedulePushNotification } from '../../../Helpers/notification';\r\n\r\nlet w = Dimensions.get('window').width;\r\nlet h = Dimensions.get('window').height;\r\n\r\nexport default function gouge({ value, size, min, max, warning }) {\r\n  var levelStyle = StyleSheet.flatten([\r\n    styles.txt,\r\n    {\r\n      color:\r\n        value <= min || value >= max\r\n          ? colors.dark_red\r\n          : value == warning\r\n          ? colors.dark_warning\r\n          : colors.light_green,\r\n      fontSize: size == 'large' ? 60 : 30,\r\n    },\r\n  ]);\r\n\r\n  var messageStyle = StyleSheet.flatten([\r\n    styles.message,\r\n    {\r\n      color:\r\n        value <= min || value >= max\r\n          ? colors.dark_red\r\n          : value == warning\r\n          ? colors.dark_warning\r\n          : colors.light_green,\r\n    },\r\n  ]);\r\n\r\n  // const sendNotif = async (title, body) => {\r\n  //   await schedulePushNotification(title, body);\r\n  // };\r\n  // if (value == warning) {\r\n  //   sendNotif('Warning at the circle gauge', 'value is now in warning zone');\r\n  // } else if (value <= min) {\r\n  //   sendNotif('Warning at the circle gauge', 'value is below the minimum');\r\n  // } else if (value >= max) {\r\n  //   sendNotif('Warning at the circle gauge', 'value is over the maximum');\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {value === 0 ? (\r\n        <View style={{ flex: 1 }}>\r\n          <NoDataFound visible={true} />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <View style={{ minHeight: '10%' }}>\r\n            {value === warning && (\r\n              <View style={styles.messageContainer}>\r\n                <AntDesign\r\n                  name=\"warning\"\r\n                  size={size == 'large' ? 30 : 25}\r\n                  color={colors.dark_warning}\r\n                />\r\n                {size == 'large' && <Text style={messageStyle}>Warning</Text>}\r\n              </View>\r\n            )}\r\n            {(value >= max || value <= min) && (\r\n              <View style={styles.messageContainer}>\r\n                <MaterialIcons\r\n                  name=\"error-outline\"\r\n                  size={size == 'large' ? 30 : 25}\r\n                  color={colors.dark_red}\r\n                />\r\n                {size == 'large' && <Text style={messageStyle}>Error</Text>}\r\n              </View>\r\n            )}\r\n          </View>\r\n          <View style={{ alignSelf: 'center' }}>\r\n            <AnimatedCircularProgress\r\n              size={size == 'large' ? h * 0.34 : h * 0.18}\r\n              width={size == 'large' ? w * 0.025 : w * 0.013}\r\n              fill={value}\r\n              backgroundWidth={size == 'large' ? w * 0.018 : w * 0.01}\r\n              tintColor={\r\n                value <= min || value >= max\r\n                  ? colors.dark_red\r\n                  : value == warning\r\n                  ? colors.dark_warning\r\n                  : colors.light_green\r\n              }\r\n              tintTransparency={false}\r\n              backgroundColor={colors.gray}\r\n              arcSweepAngle={240}\r\n              rotation={242}\r\n              lineCap=\"round\"\r\n              duration={0}\r\n            >\r\n              {(fill) => <Text style={levelStyle}>{Math.round(fill)}%</Text>}\r\n            </AnimatedCircularProgress>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.white,\r\n  },\r\n  valueContainer: {\r\n    flexDirection: 'row',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  txt: {\r\n    fontSize: 34,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  messageContainer: {\r\n    flexDirection: 'row',\r\n    alignSelf: 'flex-end',\r\n    marginRight: '5%',\r\n  },\r\n  message: {\r\n    fontSize: 14,\r\n    marginTop: 3,\r\n    marginLeft: 3,\r\n  },\r\n  percent: {\r\n    textAlign: 'center',\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginTop: '10%',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}